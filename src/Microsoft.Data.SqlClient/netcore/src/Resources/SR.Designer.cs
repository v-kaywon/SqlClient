//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Data.SqlClient.Resources.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified parameter name &apos;{0}&apos; is not valid..
        /// </summary>
        internal static string ADP_BadParameterName {
            get {
                return ResourceManager.GetString("ADP_BadParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method &apos;{0}&apos; cannot be called more than once for the same execution..
        /// </summary>
        internal static string ADP_CalledTwice {
            get {
                return ResourceManager.GetString("ADP_CalledTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operation. The connection is closed..
        /// </summary>
        internal static string ADP_ClosedConnectionError {
            get {
                return ResourceManager.GetString("ADP_ClosedConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid index {0} for this {1} with Count={2}..
        /// </summary>
        internal static string ADP_CollectionIndexInt32 {
            get {
                return ResourceManager.GetString("ADP_CollectionIndexInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A {0} with {1} &apos;{2}&apos; is not contained by this {3}..
        /// </summary>
        internal static string ADP_CollectionIndexString {
            get {
                return ResourceManager.GetString("ADP_CollectionIndexString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} only accepts non-null {1} type objects, not {2} objects..
        /// </summary>
        internal static string ADP_CollectionInvalidType {
            get {
                return ResourceManager.GetString("ADP_CollectionInvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} is already contained by another {1}..
        /// </summary>
        internal static string ADP_CollectionIsNotParent {
            get {
                return ResourceManager.GetString("ADP_CollectionIsNotParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} only accepts non-null {1} type objects..
        /// </summary>
        internal static string ADP_CollectionNullValue {
            get {
                return ResourceManager.GetString("ADP_CollectionNullValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to remove an {0} that is not contained by this {1}..
        /// </summary>
        internal static string ADP_CollectionRemoveInvalidObject {
            get {
                return ResourceManager.GetString("ADP_CollectionRemoveInvalidObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: CommandText property has not been initialized.
        /// </summary>
        internal static string ADP_CommandTextRequired {
            get {
                return ResourceManager.GetString("ADP_CommandTextRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection was not closed. {0}.
        /// </summary>
        internal static string ADP_ConnectionAlreadyOpen {
            get {
                return ResourceManager.GetString("ADP_ConnectionAlreadyOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection has been disabled..
        /// </summary>
        internal static string ADP_ConnectionIsDisabled {
            get {
                return ResourceManager.GetString("ADP_ConnectionIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}: Connection property has not been initialized..
        /// </summary>
        internal static string ADP_ConnectionRequired {
            get {
                return ResourceManager.GetString("ADP_ConnectionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection&apos;s current state: {0}..
        /// </summary>
        internal static string ADP_ConnectionStateMsg {
            get {
                return ResourceManager.GetString("ADP_ConnectionStateMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection&apos;s current state is closed..
        /// </summary>
        internal static string ADP_ConnectionStateMsg_Closed {
            get {
                return ResourceManager.GetString("ADP_ConnectionStateMsg_Closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection&apos;s current state is connecting..
        /// </summary>
        internal static string ADP_ConnectionStateMsg_Connecting {
            get {
                return ResourceManager.GetString("ADP_ConnectionStateMsg_Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection&apos;s current state is open..
        /// </summary>
        internal static string ADP_ConnectionStateMsg_Open {
            get {
                return ResourceManager.GetString("ADP_ConnectionStateMsg_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection&apos;s current state is executing..
        /// </summary>
        internal static string ADP_ConnectionStateMsg_OpenExecuting {
            get {
                return ResourceManager.GetString("ADP_ConnectionStateMsg_OpenExecuting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection&apos;s current state is fetching..
        /// </summary>
        internal static string ADP_ConnectionStateMsg_OpenFetching {
            get {
                return ResourceManager.GetString("ADP_ConnectionStateMsg_OpenFetching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format of the initialization string does not conform to specification starting at index {0}..
        /// </summary>
        internal static string ADP_ConnectionStringSyntax {
            get {
                return ResourceManager.GetString("ADP_ConnectionStringSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to call {0} when reader is closed..
        /// </summary>
        internal static string ADP_DataReaderClosed {
            get {
                return ResourceManager.GetString("ADP_DataReaderClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mapping exists from DbType {0} to a known {1}..
        /// </summary>
        internal static string ADP_DbTypeNotSupported {
            get {
                return ResourceManager.GetString("ADP_DbTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} DeriveParameters only supports CommandType.StoredProcedure, not CommandType. {1}..
        /// </summary>
        internal static string ADP_DeriveParametersNotSupported {
            get {
                return ResourceManager.GetString("ADP_DeriveParametersNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The acceptable values for the property &apos;{0}&apos; are &apos;{1}&apos; or &apos;{2}&apos;..
        /// </summary>
        internal static string ADP_DoubleValuedProperty {
            get {
                return ResourceManager.GetString("ADP_DoubleValuedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database cannot be null, the empty string, or string of only whitespace..
        /// </summary>
        internal static string ADP_EmptyDatabaseName {
            get {
                return ResourceManager.GetString("ADP_EmptyDatabaseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal DbConnection Error: {0}.
        /// </summary>
        internal static string ADP_InternalConnectionError {
            get {
                return ResourceManager.GetString("ADP_InternalConnectionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal .NET Framework Data Provider error {0}..
        /// </summary>
        internal static string ADP_InternalProviderError {
            get {
                return ResourceManager.GetString("ADP_InternalProviderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of argument &apos;{0}&apos; exceeds its limit of &apos;{1}&apos;..
        /// </summary>
        internal static string ADP_InvalidArgumentLength {
            get {
                return ResourceManager.GetString("ADP_InvalidArgumentLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid CommandTimeout value {0}; the value must be &gt;= 0..
        /// </summary>
        internal static string ADP_InvalidCommandTimeout {
            get {
                return ResourceManager.GetString("ADP_InvalidCommandTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for key &apos;{0}&apos;..
        /// </summary>
        internal static string ADP_InvalidConnectionOptionValue {
            get {
                return ResourceManager.GetString("ADP_InvalidConnectionOptionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value&apos;s length for key &apos;{0}&apos; exceeds it&apos;s limit of &apos;{1}&apos;..
        /// </summary>
        internal static string ADP_InvalidConnectionOptionValueLength {
            get {
                return ResourceManager.GetString("ADP_InvalidConnectionOptionValueLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified length &apos;{0}&apos; is out of range..
        /// </summary>
        internal static string ADP_InvalidDataLength2 {
            get {
                return ResourceManager.GetString("ADP_InvalidDataLength2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parameter data type of {0} is invalid..
        /// </summary>
        internal static string ADP_InvalidDataType {
            get {
                return ResourceManager.GetString("ADP_InvalidDataType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid destination buffer (size of {0}) offset: {1}.
        /// </summary>
        internal static string ADP_InvalidDestinationBufferIndex {
            get {
                return ResourceManager.GetString("ADP_InvalidDestinationBufferIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} enumeration value, {1}, is invalid..
        /// </summary>
        internal static string ADP_InvalidEnumerationValue {
            get {
                return ResourceManager.GetString("ADP_InvalidEnumerationValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for this metadata..
        /// </summary>
        internal static string ADP_InvalidMetaDataValue {
            get {
                return ResourceManager.GetString("ADP_InvalidMetaDataValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid min or max pool size values, min pool size cannot be greater than the max pool size..
        /// </summary>
        internal static string ADP_InvalidMinMaxPoolSizeValues {
            get {
                return ResourceManager.GetString("ADP_InvalidMinMaxPoolSizeValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set the AccessToken property if &apos;Authentication&apos; has been specified in the connection string..
        /// </summary>
        internal static string ADP_InvalidMixedUsageOfAccessTokenAndAuthentication {
            get {
                return ResourceManager.GetString("ADP_InvalidMixedUsageOfAccessTokenAndAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set the AccessToken property if the &apos;Integrated Security&apos; connection string keyword has been set to &apos;true&apos; or &apos;SSPI&apos;..
        /// </summary>
        internal static string ADP_InvalidMixedUsageOfAccessTokenAndIntegratedSecurity {
            get {
                return ResourceManager.GetString("ADP_InvalidMixedUsageOfAccessTokenAndIntegratedSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set the AccessToken property if &apos;UserID&apos;, &apos;UID&apos;, &apos;Password&apos;, or &apos;PWD&apos; has been specified in connection string..
        /// </summary>
        internal static string ADP_InvalidMixedUsageOfAccessTokenAndUserIDPassword {
            get {
                return ResourceManager.GetString("ADP_InvalidMixedUsageOfAccessTokenAndUserIDPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set the Credential property if the AccessToken property is already set..
        /// </summary>
        internal static string ADP_InvalidMixedUsageOfCredentialAndAccessToken {
            get {
                return ResourceManager.GetString("ADP_InvalidMixedUsageOfCredentialAndAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use Credential with UserID, UID, Password, or PWD connection string keywords..
        /// </summary>
        internal static string ADP_InvalidMixedUsageOfSecureAndClearCredential {
            get {
                return ResourceManager.GetString("ADP_InvalidMixedUsageOfSecureAndClearCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use Credential with Integrated Security connection string keyword..
        /// </summary>
        internal static string ADP_InvalidMixedUsageOfSecureCredentialAndIntegratedSecurity {
            get {
                return ResourceManager.GetString("ADP_InvalidMixedUsageOfSecureCredentialAndIntegratedSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} &apos;{1}&apos;..
        /// </summary>
        internal static string ADP_InvalidMultipartName {
            get {
                return ResourceManager.GetString("ADP_InvalidMultipartName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} &apos;{1}&apos;, incorrect usage of quotes..
        /// </summary>
        internal static string ADP_InvalidMultipartNameQuoteUsage {
            get {
                return ResourceManager.GetString("ADP_InvalidMultipartNameQuoteUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} &apos;{1}&apos;, the current limit of &apos;{2}&apos; is insufficient..
        /// </summary>
        internal static string ADP_InvalidMultipartNameToManyParts {
            get {
                return ResourceManager.GetString("ADP_InvalidMultipartNameToManyParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter Offset value &apos;{0}&apos;. The value must be greater than or equal to 0..
        /// </summary>
        internal static string ADP_InvalidOffsetValue {
            get {
                return ResourceManager.GetString("ADP_InvalidOffsetValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified QuotePrefix and QuoteSuffix values do not match..
        /// </summary>
        internal static string ADP_InvalidPrefixSuffix {
            get {
                return ResourceManager.GetString("ADP_InvalidPrefixSuffix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified SeekOrigin value is invalid..
        /// </summary>
        internal static string ADP_InvalidSeekOrigin {
            get {
                return ResourceManager.GetString("ADP_InvalidSeekOrigin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter Size value &apos;{0}&apos;. The value must be greater than or equal to 0..
        /// </summary>
        internal static string ADP_InvalidSizeValue {
            get {
                return ResourceManager.GetString("ADP_InvalidSizeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid source buffer (size of {0}) offset: {1}.
        /// </summary>
        internal static string ADP_InvalidSourceBufferIndex {
            get {
                return ResourceManager.GetString("ADP_InvalidSourceBufferIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword not supported: &apos;{0}&apos;..
        /// </summary>
        internal static string ADP_KeywordNotSupported {
            get {
                return ResourceManager.GetString("ADP_KeywordNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot enlist in the transaction because a local transaction is in progress on the connection.  Finish local transaction and retry..
        /// </summary>
        internal static string ADP_LocalTransactionPresent {
            get {
                return ResourceManager.GetString("ADP_LocalTransactionPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mismatched end method call for asyncResult.  Expected call to {0} but {1} was called instead..
        /// </summary>
        internal static string ADP_MismatchedAsyncResult {
            get {
                return ResourceManager.GetString("ADP_MismatchedAsyncResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of key &apos;{0}&apos; requires the key &apos;{1}&apos; to be present..
        /// </summary>
        internal static string ADP_MissingConnectionOptionValue {
            get {
                return ResourceManager.GetString("ADP_MissingConnectionOptionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} must be marked as read only..
        /// </summary>
        internal static string ADP_MustBeReadOnly {
            get {
                return ResourceManager.GetString("ADP_MustBeReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid value for argument &apos;{0}&apos;. The value must be greater than or equal to 0..
        /// </summary>
        internal static string ADP_NegativeParameter {
            get {
                return ResourceManager.GetString("ADP_NegativeParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ConnectionString property has not been initialized..
        /// </summary>
        internal static string ADP_NoConnectionString {
            get {
                return ResourceManager.GetString("ADP_NoConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout attempting to open the connection.  The time period elapsed prior to attempting to open the connection has been exceeded.  This may have occurred because of too many simultaneous non-pooled connection attempts..
        /// </summary>
        internal static string ADP_NonPooledOpenTimeout {
            get {
                return ResourceManager.GetString("ADP_NonPooledOpenTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid {2} attempt at dataIndex &apos;{0}&apos;.  With CommandBehavior.SequentialAccess, you may only read from dataIndex &apos;{1}&apos; or greater..
        /// </summary>
        internal static string ADP_NonSeqByteAccess {
            get {
                return ResourceManager.GetString("ADP_NonSeqByteAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to read from column ordinal &apos;{0}&apos;.  With CommandBehavior.SequentialAccess, you may only read from column ordinal &apos;{1}&apos; or greater..
        /// </summary>
        internal static string ADP_NonSequentialColumnAccess {
            get {
                return ResourceManager.GetString("ADP_NonSequentialColumnAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stored procedure &apos;{0}&apos; doesn&apos;t exist..
        /// </summary>
        internal static string ADP_NoStoredProcedureExists {
            get {
                return ResourceManager.GetString("ADP_NoStoredProcedureExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} enumeration value, {1}, is not supported by the {2} method..
        /// </summary>
        internal static string ADP_NotSupportedEnumerationValue {
            get {
                return ResourceManager.GetString("ADP_NotSupportedEnumerationValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not allowed to change the &apos;{0}&apos; property. {1}.
        /// </summary>
        internal static string ADP_OpenConnectionPropertySet {
            get {
                return ResourceManager.GetString("ADP_OpenConnectionPropertySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires an open and available Connection. {1}.
        /// </summary>
        internal static string ADP_OpenConnectionRequired {
            get {
                return ResourceManager.GetString("ADP_OpenConnectionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already an open DataReader associated with this {0} which must be closed first..
        /// </summary>
        internal static string ADP_OpenReaderExists {
            get {
                return ResourceManager.GetString("ADP_OpenReaderExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation aborted..
        /// </summary>
        internal static string ADP_OperationAborted {
            get {
                return ResourceManager.GetString("ADP_OperationAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation aborted due to an exception (see InnerException for details)..
        /// </summary>
        internal static string ADP_OperationAbortedExceptionMessage {
            get {
                return ResourceManager.GetString("ADP_OperationAbortedExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} does not support parallel transactions..
        /// </summary>
        internal static string ADP_ParallelTransactionsNotSupported {
            get {
                return ResourceManager.GetString("ADP_ParallelTransactionsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to convert parameter value from a {0} to a {1}..
        /// </summary>
        internal static string ADP_ParameterConversionFailed {
            get {
                return ResourceManager.GetString("ADP_ParameterConversionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter value &apos;{0}&apos; is out of range..
        /// </summary>
        internal static string ADP_ParameterValueOutOfRange {
            get {
                return ResourceManager.GetString("ADP_ParameterValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not start another operation while there is an asynchronous operation pending..
        /// </summary>
        internal static string ADP_PendingAsyncOperation {
            get {
                return ResourceManager.GetString("ADP_PendingAsyncOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached..
        /// </summary>
        internal static string ADP_PooledOpenTimeout {
            get {
                return ResourceManager.GetString("ADP_PooledOpenTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.Prepare method requires parameters of type &apos;{1}&apos; have an explicitly set Precision and Scale..
        /// </summary>
        internal static string ADP_PrepareParameterScale {
            get {
                return ResourceManager.GetString("ADP_PrepareParameterScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.Prepare method requires all variable length parameters to have an explicitly set non-zero Size..
        /// </summary>
        internal static string ADP_PrepareParameterSize {
            get {
                return ResourceManager.GetString("ADP_PrepareParameterSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.Prepare method requires all parameters to have an explicitly set type..
        /// </summary>
        internal static string ADP_PrepareParameterType {
            get {
                return ResourceManager.GetString("ADP_PrepareParameterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The only acceptable value for the property &apos;{0}&apos; is &apos;{1}&apos;..
        /// </summary>
        internal static string ADP_SingleValuedProperty {
            get {
                return ResourceManager.GetString("ADP_SingleValuedProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to {0} when stream is closed..
        /// </summary>
        internal static string ADP_StreamClosed {
            get {
                return ResourceManager.GetString("ADP_StreamClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction associated with the current connection has completed but has not been disposed.  The transaction must be disposed before the connection can be used to execute SQL statements..
        /// </summary>
        internal static string ADP_TransactionCompletedButNotDisposed {
            get {
                return ResourceManager.GetString("ADP_TransactionCompletedButNotDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction is either not associated with the current connection or has been completed..
        /// </summary>
        internal static string ADP_TransactionConnectionMismatch {
            get {
                return ResourceManager.GetString("ADP_TransactionConnectionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection currently has transaction enlisted.  Finish current transaction and retry..
        /// </summary>
        internal static string ADP_TransactionPresent {
            get {
                return ResourceManager.GetString("ADP_TransactionPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires the command to have a transaction when the connection assigned to the command is in a pending local transaction.  The Transaction property of the command has not been initialized..
        /// </summary>
        internal static string ADP_TransactionRequired {
            get {
                return ResourceManager.GetString("ADP_TransactionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This {0} has completed; it is no longer usable..
        /// </summary>
        internal static string ADP_TransactionZombied {
            get {
                return ResourceManager.GetString("ADP_TransactionZombied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}[{0}]: the Size property has an invalid size of 0..
        /// </summary>
        internal static string ADP_UninitializedParameterSize {
            get {
                return ResourceManager.GetString("ADP_UninitializedParameterSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mapping exists from object type {0} to a known managed provider native type..
        /// </summary>
        internal static string ADP_UnknownDataType {
            get {
                return ResourceManager.GetString("ADP_UnknownDataType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to handle an unknown TypeCode {0} returned by Type {1}..
        /// </summary>
        internal static string ADP_UnknownDataTypeCode {
            get {
                return ResourceManager.GetString("ADP_UnknownDataTypeCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of SQL Server in use does not support datatype &apos;{0}&apos;..
        /// </summary>
        internal static string ADP_VersionDoesNotSupportDataType {
            get {
                return ResourceManager.GetString("ADP_VersionDoesNotSupportDataType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Destination array is not long enough to copy all the items in the collection. Check array index and length..
        /// </summary>
        internal static string Arg_ArrayPlusOffTooSmall {
            get {
                return ResourceManager.GetString("Arg_ArrayPlusOffTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only single dimensional arrays are supported for the requested action..
        /// </summary>
        internal static string Arg_RankMultiDimNotSupported {
            get {
                return ResourceManager.GetString("Arg_RankMultiDimNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove the specified item because it was not found in the specified Collection..
        /// </summary>
        internal static string Arg_RemoveArgNotFound {
            get {
                return ResourceManager.GetString("Arg_RemoveArgNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-negative number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .database.chinacloudapi.cn.
        /// </summary>
        internal static string AZURESQL_ChinaEndpoint {
            get {
                return ResourceManager.GetString("AZURESQL_ChinaEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .database.windows.net.
        /// </summary>
        internal static string AZURESQL_GenericEndpoint {
            get {
                return ResourceManager.GetString("AZURESQL_GenericEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .database.cloudapi.de.
        /// </summary>
        internal static string AZURESQL_GermanEndpoint {
            get {
                return ResourceManager.GetString("AZURESQL_GermanEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .database.usgovcloudapi.net.
        /// </summary>
        internal static string AZURESQL_UsGovEndpoint {
            get {
                return ResourceManager.GetString("AZURESQL_UsGovEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        internal static string Data_InvalidOffsetLength {
            get {
                return ResourceManager.GetString("Data_InvalidOffsetLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} returned {1}..
        /// </summary>
        internal static string event_OperationReturnedSomething {
            get {
                return ResourceManager.GetString("event_OperationReturnedSomething", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Transactions are not enabled for this Azure SQL Database. Please contact Azure SQL Database support for assistance..
        /// </summary>
        internal static string GT_Disabled {
            get {
                return ResourceManager.GetString("GT_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no records in the SqlDataRecord enumeration. To send a table-valued parameter with no rows, use a null reference for the value instead..
        /// </summary>
        internal static string IEnumerableOfSqlDataRecordHasNoRows {
            get {
                return ResourceManager.GetString("IEnumerableOfSqlDataRecordHasNoRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid column ordinals in schema table.  ColumnOrdinals, if present, must not have duplicates or gaps..
        /// </summary>
        internal static string InvalidSchemaTableOrdinals {
            get {
                return ResourceManager.GetString("InvalidSchemaTableOrdinals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Database Runtime: Cannot load SQLUserInstance.dll..
        /// </summary>
        internal static string LocalDB_FailedGetDLLHandle {
            get {
                return ResourceManager.GetString("LocalDB_FailedGetDLLHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SQLUserInstance.dll found at the location specified in the registry. Verify that the Local Database Runtime feature of SQL Server Express is properly installed..
        /// </summary>
        internal static string LocalDB_MethodNotFound {
            get {
                return ResourceManager.GetString("LocalDB_MethodNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot obtain Local Database Runtime error message.
        /// </summary>
        internal static string LocalDB_UnobtainableMessage {
            get {
                return ResourceManager.GetString("LocalDB_UnobtainableMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LocalDB is not supported on this platform..
        /// </summary>
        internal static string LocalDBNotSupported {
            get {
                return ResourceManager.GetString("LocalDBNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection name &apos;{0}&apos; matches at least two collections with the same name but with different case, but does not match any of them exactly..
        /// </summary>
        internal static string MDF_AmbigousCollectionName {
            get {
                return ResourceManager.GetString("MDF_AmbigousCollectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are multiple collections named &apos;{0}&apos;..
        /// </summary>
        internal static string MDF_CollectionNameISNotUnique {
            get {
                return ResourceManager.GetString("MDF_CollectionNameISNotUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection &apos;{0}&apos; is missing from the metadata XML..
        /// </summary>
        internal static string MDF_DataTableDoesNotExist {
            get {
                return ResourceManager.GetString("MDF_DataTableDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DataSourceInformation table must contain exactly one row..
        /// </summary>
        internal static string MDF_IncorrectNumberOfDataSourceInformationRows {
            get {
                return ResourceManager.GetString("MDF_IncorrectNumberOfDataSourceInformationRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata XML is invalid..
        /// </summary>
        internal static string MDF_InvalidXml {
            get {
                return ResourceManager.GetString("MDF_InvalidXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata XML is invalid. The {1} column of the {0} collection must contain a non-empty string..
        /// </summary>
        internal static string MDF_InvalidXmlInvalidValue {
            get {
                return ResourceManager.GetString("MDF_InvalidXmlInvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata XML is invalid. The {0} collection must contain a {1} column and it must be a string column..
        /// </summary>
        internal static string MDF_InvalidXmlMissingColumn {
            get {
                return ResourceManager.GetString("MDF_InvalidXmlMissingColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the required DataSourceInformation tables columns is missing..
        /// </summary>
        internal static string MDF_MissingDataSourceInformationColumn {
            get {
                return ResourceManager.GetString("MDF_MissingDataSourceInformationColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more of the required columns of the restrictions collection is missing..
        /// </summary>
        internal static string MDF_MissingRestrictionColumn {
            get {
                return ResourceManager.GetString("MDF_MissingRestrictionColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A restriction exists for which there is no matching row in the restrictions collection..
        /// </summary>
        internal static string MDF_MissingRestrictionRow {
            get {
                return ResourceManager.GetString("MDF_MissingRestrictionRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema table contains no columns..
        /// </summary>
        internal static string MDF_NoColumns {
            get {
                return ResourceManager.GetString("MDF_NoColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to build the &apos;{0}&apos; collection because execution of the SQL query failed. See the inner exception for details..
        /// </summary>
        internal static string MDF_QueryFailed {
            get {
                return ResourceManager.GetString("MDF_QueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More restrictions were provided than the requested schema (&apos;{0}&apos;) supports..
        /// </summary>
        internal static string MDF_TooManyRestrictions {
            get {
                return ResourceManager.GetString("MDF_TooManyRestrictions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to build schema collection &apos;{0}&apos;;.
        /// </summary>
        internal static string MDF_UnableToBuildCollection {
            get {
                return ResourceManager.GetString("MDF_UnableToBuildCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested collection ({0}) is not defined..
        /// </summary>
        internal static string MDF_UndefinedCollection {
            get {
                return ResourceManager.GetString("MDF_UndefinedCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested collection ({0}) is not supported by this version of the provider..
        /// </summary>
        internal static string MDF_UnsupportedVersion {
            get {
                return ResourceManager.GetString("MDF_UnsupportedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol error: A received message contains a valid signature but it was not encrypted as required by the effective Protection Level..
        /// </summary>
        internal static string net_auth_message_not_encrypted {
            get {
                return ResourceManager.GetString("net_auth_message_not_encrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient buffer space. Required: {0} Actual: {1}..
        /// </summary>
        internal static string net_context_buffer_too_small {
            get {
                return ResourceManager.GetString("net_context_buffer_too_small", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GSSAPI operation failed with status: {0} (Minor status: {1})..
        /// </summary>
        internal static string net_gssapi_operation_failed {
            get {
                return ResourceManager.GetString("net_gssapi_operation_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GSSAPI operation failed with error - {0} ({1})..
        /// </summary>
        internal static string net_gssapi_operation_failed_detailed {
            get {
                return ResourceManager.GetString("net_gssapi_operation_failed_detailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value is not valid in the &apos;{0}&apos; enumeration..
        /// </summary>
        internal static string net_invalid_enum {
            get {
                return ResourceManager.GetString("net_invalid_enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} failed with error {1}..
        /// </summary>
        internal static string net_log_operation_failed_with_error {
            get {
                return ResourceManager.GetString("net_log_operation_failed_with_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method is not implemented by this class..
        /// </summary>
        internal static string net_MethodNotImplementedException {
            get {
                return ResourceManager.GetString("net_MethodNotImplementedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No support for channel binding on operating systems other than Windows..
        /// </summary>
        internal static string net_nego_channel_binding_not_supported {
            get {
                return ResourceManager.GetString("net_nego_channel_binding_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target name should be non empty if default credentials are passed..
        /// </summary>
        internal static string net_nego_not_supported_empty_target_with_defaultcreds {
            get {
                return ResourceManager.GetString("net_nego_not_supported_empty_target_with_defaultcreds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested protection level is not supported with the GSSAPI implementation currently installed..
        /// </summary>
        internal static string net_nego_protection_level_not_supported {
            get {
                return ResourceManager.GetString("net_nego_protection_level_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server implementation is not supported.
        /// </summary>
        internal static string net_nego_server_not_supported {
            get {
                return ResourceManager.GetString("net_nego_server_not_supported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NTLM authentication is not possible with default credentials on this platform..
        /// </summary>
        internal static string net_ntlm_not_possible_default_cred {
            get {
                return ResourceManager.GetString("net_ntlm_not_possible_default_cred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested security package is not supported..
        /// </summary>
        internal static string net_securitypackagesupport {
            get {
                return ResourceManager.GetString("net_securitypackagesupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateType column for field &apos;{0}&apos; in schema table is null.  DataType must be non-null..
        /// </summary>
        internal static string NullSchemaTableDataTypeNotSupported {
            get {
                return ResourceManager.GetString("NullSchemaTableDataTypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft.Data.SqlClient is not supported on this platform..
        /// </summary>
        internal static string PlatformNotSupported_DataSqlClient {
            get {
                return ResourceManager.GetString("PlatformNotSupported_DataSqlClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I/O Error detected in read/write operation.
        /// </summary>
        internal static string SNI_ERROR_1 {
            get {
                return ResourceManager.GetString("SNI_ERROR_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout error.
        /// </summary>
        internal static string SNI_ERROR_11 {
            get {
                return ResourceManager.GetString("SNI_ERROR_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No server name supplied.
        /// </summary>
        internal static string SNI_ERROR_12 {
            get {
                return ResourceManager.GetString("SNI_ERROR_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TerminateListener() has been called.
        /// </summary>
        internal static string SNI_ERROR_13 {
            get {
                return ResourceManager.GetString("SNI_ERROR_13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win9x not supported.
        /// </summary>
        internal static string SNI_ERROR_14 {
            get {
                return ResourceManager.GetString("SNI_ERROR_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function not supported.
        /// </summary>
        internal static string SNI_ERROR_15 {
            get {
                return ResourceManager.GetString("SNI_ERROR_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared-Memory heap error.
        /// </summary>
        internal static string SNI_ERROR_16 {
            get {
                return ResourceManager.GetString("SNI_ERROR_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find an ip/ipv6 type address to connect.
        /// </summary>
        internal static string SNI_ERROR_17 {
            get {
                return ResourceManager.GetString("SNI_ERROR_17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection has been closed by peer.
        /// </summary>
        internal static string SNI_ERROR_18 {
            get {
                return ResourceManager.GetString("SNI_ERROR_18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Physical connection is not usable.
        /// </summary>
        internal static string SNI_ERROR_19 {
            get {
                return ResourceManager.GetString("SNI_ERROR_19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection was terminated.
        /// </summary>
        internal static string SNI_ERROR_2 {
            get {
                return ResourceManager.GetString("SNI_ERROR_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection has been closed.
        /// </summary>
        internal static string SNI_ERROR_20 {
            get {
                return ResourceManager.GetString("SNI_ERROR_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption is enforced but there is no valid certificate.
        /// </summary>
        internal static string SNI_ERROR_21 {
            get {
                return ResourceManager.GetString("SNI_ERROR_21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t load library.
        /// </summary>
        internal static string SNI_ERROR_22 {
            get {
                return ResourceManager.GetString("SNI_ERROR_22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open a new thread in server process.
        /// </summary>
        internal static string SNI_ERROR_23 {
            get {
                return ResourceManager.GetString("SNI_ERROR_23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot post event to completion port.
        /// </summary>
        internal static string SNI_ERROR_24 {
            get {
                return ResourceManager.GetString("SNI_ERROR_24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection string is not valid.
        /// </summary>
        internal static string SNI_ERROR_25 {
            get {
                return ResourceManager.GetString("SNI_ERROR_25", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Locating Server/Instance Specified.
        /// </summary>
        internal static string SNI_ERROR_26 {
            get {
                return ResourceManager.GetString("SNI_ERROR_26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error getting enabled protocols list from registry.
        /// </summary>
        internal static string SNI_ERROR_27 {
            get {
                return ResourceManager.GetString("SNI_ERROR_27", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server doesn&apos;t support requested protocol.
        /// </summary>
        internal static string SNI_ERROR_28 {
            get {
                return ResourceManager.GetString("SNI_ERROR_28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared Memory is not supported for clustered server connectivity.
        /// </summary>
        internal static string SNI_ERROR_29 {
            get {
                return ResourceManager.GetString("SNI_ERROR_29", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asynchronous operations not supported.
        /// </summary>
        internal static string SNI_ERROR_3 {
            get {
                return ResourceManager.GetString("SNI_ERROR_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt bind to shared memory segment.
        /// </summary>
        internal static string SNI_ERROR_30 {
            get {
                return ResourceManager.GetString("SNI_ERROR_30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption(ssl/tls) handshake failed.
        /// </summary>
        internal static string SNI_ERROR_31 {
            get {
                return ResourceManager.GetString("SNI_ERROR_31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packet size too large for SSL Encrypt/Decrypt operations.
        /// </summary>
        internal static string SNI_ERROR_32 {
            get {
                return ResourceManager.GetString("SNI_ERROR_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSRP error.
        /// </summary>
        internal static string SNI_ERROR_33 {
            get {
                return ResourceManager.GetString("SNI_ERROR_33", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not connect to the Shared Memory pipe.
        /// </summary>
        internal static string SNI_ERROR_34 {
            get {
                return ResourceManager.GetString("SNI_ERROR_34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An internal exception was caught.
        /// </summary>
        internal static string SNI_ERROR_35 {
            get {
                return ResourceManager.GetString("SNI_ERROR_35", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Shared Memory dll used to connect to SQL Server 2000 was not found.
        /// </summary>
        internal static string SNI_ERROR_36 {
            get {
                return ResourceManager.GetString("SNI_ERROR_36", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SQL Server 2000 Shared Memory client dll appears to be invalid/corrupted.
        /// </summary>
        internal static string SNI_ERROR_37 {
            get {
                return ResourceManager.GetString("SNI_ERROR_37", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open a Shared Memory connection to SQL Server 2000.
        /// </summary>
        internal static string SNI_ERROR_38 {
            get {
                return ResourceManager.GetString("SNI_ERROR_38", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared memory connectivity to SQL Server 2000 is either disabled or not available on this machine.
        /// </summary>
        internal static string SNI_ERROR_39 {
            get {
                return ResourceManager.GetString("SNI_ERROR_39", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open a connection to SQL Server.
        /// </summary>
        internal static string SNI_ERROR_40 {
            get {
                return ResourceManager.GetString("SNI_ERROR_40", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open a Shared Memory connection to a remote SQL server.
        /// </summary>
        internal static string SNI_ERROR_41 {
            get {
                return ResourceManager.GetString("SNI_ERROR_41", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not establish dedicated administrator connection (DAC) on default port. Make sure that DAC is enabled.
        /// </summary>
        internal static string SNI_ERROR_42 {
            get {
                return ResourceManager.GetString("SNI_ERROR_42", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while obtaining the dedicated administrator connection (DAC) port. Make sure that SQL Browser is running, or check the error log for the port number.
        /// </summary>
        internal static string SNI_ERROR_43 {
            get {
                return ResourceManager.GetString("SNI_ERROR_43", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not compose Service Principal Name (SPN) for Windows Integrated Authentication. Possible causes are server(s) incorrectly specified to connection API calls, Domain Name System (DNS) lookup failure or memory shortage.
        /// </summary>
        internal static string SNI_ERROR_44 {
            get {
                return ResourceManager.GetString("SNI_ERROR_44", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting with the MultiSubnetFailover connection option to a SQL Server instance configured with more than 64 IP addresses is not supported..
        /// </summary>
        internal static string SNI_ERROR_47 {
            get {
                return ResourceManager.GetString("SNI_ERROR_47", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to a named SQL Server instance using the MultiSubnetFailover connection option is not supported..
        /// </summary>
        internal static string SNI_ERROR_48 {
            get {
                return ResourceManager.GetString("SNI_ERROR_48", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to a SQL Server instance using the MultiSubnetFailover connection option is only supported when using the TCP protocol..
        /// </summary>
        internal static string SNI_ERROR_49 {
            get {
                return ResourceManager.GetString("SNI_ERROR_49", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter(s) found.
        /// </summary>
        internal static string SNI_ERROR_5 {
            get {
                return ResourceManager.GetString("SNI_ERROR_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Database Runtime error occurred. .
        /// </summary>
        internal static string SNI_ERROR_50 {
            get {
                return ResourceManager.GetString("SNI_ERROR_50", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance name was not specified while connecting to a Local Database Runtime. Specify an instance name in the format (localdb)\instance_name..
        /// </summary>
        internal static string SNI_ERROR_51 {
            get {
                return ResourceManager.GetString("SNI_ERROR_51", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate a Local Database Runtime installation. Verify that SQL Server Express is properly installed and that the Local Database Runtime feature is enabled..
        /// </summary>
        internal static string SNI_ERROR_52 {
            get {
                return ResourceManager.GetString("SNI_ERROR_52", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Local Database Runtime registry configuration found. Verify that SQL Server Express is properly installed..
        /// </summary>
        internal static string SNI_ERROR_53 {
            get {
                return ResourceManager.GetString("SNI_ERROR_53", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate the registry entry for SQLUserInstance.dll file path. Verify that the Local Database Runtime feature of SQL Server Express is properly installed..
        /// </summary>
        internal static string SNI_ERROR_54 {
            get {
                return ResourceManager.GetString("SNI_ERROR_54", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry value contains an invalid SQLUserInstance.dll file path. Verify that the Local Database Runtime feature of SQL Server Express is properly installed..
        /// </summary>
        internal static string SNI_ERROR_55 {
            get {
                return ResourceManager.GetString("SNI_ERROR_55", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load the SQLUserInstance.dll from the location specified in the registry. Verify that the Local Database Runtime feature of SQL Server Express is properly installed..
        /// </summary>
        internal static string SNI_ERROR_56 {
            get {
                return ResourceManager.GetString("SNI_ERROR_56", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SQLUserInstance.dll found at the location specified in the registry. Verify that the Local Database Runtime feature of SQL Server Express is properly installed..
        /// </summary>
        internal static string SNI_ERROR_57 {
            get {
                return ResourceManager.GetString("SNI_ERROR_57", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported protocol specified.
        /// </summary>
        internal static string SNI_ERROR_6 {
            get {
                return ResourceManager.GetString("SNI_ERROR_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid connection found when setting up new session protocol.
        /// </summary>
        internal static string SNI_ERROR_7 {
            get {
                return ResourceManager.GetString("SNI_ERROR_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protocol not supported.
        /// </summary>
        internal static string SNI_ERROR_8 {
            get {
                return ResourceManager.GetString("SNI_ERROR_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associating port with I/O completion mechanism failed.
        /// </summary>
        internal static string SNI_ERROR_9 {
            get {
                return ResourceManager.GetString("SNI_ERROR_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP Provider.
        /// </summary>
        internal static string SNI_PN0 {
            get {
                return ResourceManager.GetString("SNI_PN0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Named Pipes Provider.
        /// </summary>
        internal static string SNI_PN1 {
            get {
                return ResourceManager.GetString("SNI_PN1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session Provider.
        /// </summary>
        internal static string SNI_PN2 {
            get {
                return ResourceManager.GetString("SNI_PN2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign Provider.
        /// </summary>
        internal static string SNI_PN3 {
            get {
                return ResourceManager.GetString("SNI_PN3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shared Memory Provider.
        /// </summary>
        internal static string SNI_PN4 {
            get {
                return ResourceManager.GetString("SNI_PN4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SMux Provider.
        /// </summary>
        internal static string SNI_PN5 {
            get {
                return ResourceManager.GetString("SNI_PN5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSL Provider.
        /// </summary>
        internal static string SNI_PN6 {
            get {
                return ResourceManager.GetString("SNI_PN6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TCP Provider.
        /// </summary>
        internal static string SNI_PN7 {
            get {
                return ResourceManager.GetString("SNI_PN7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SNI_PN8 {
            get {
                return ResourceManager.GetString("SNI_PN8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Network Interfaces.
        /// </summary>
        internal static string SNI_PN9 {
            get {
                return ResourceManager.GetString("SNI_PN9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection open and login was successful, but then an error occurred while enlisting the connection into the current distributed transaction..
        /// </summary>
        internal static string Snix_AutoEnlist {
            get {
                return ResourceManager.GetString("Snix_AutoEnlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transport-level error has occurred during connection clean-up..
        /// </summary>
        internal static string Snix_Close {
            get {
                return ResourceManager.GetString("Snix_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections..
        /// </summary>
        internal static string Snix_Connect {
            get {
                return ResourceManager.GetString("Snix_Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection open and login was successful, but then an error occurred while enabling MARS for this connection..
        /// </summary>
        internal static string Snix_EnableMars {
            get {
                return ResourceManager.GetString("Snix_EnableMars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transport-level error has occurred when sending the request to the server..
        /// </summary>
        internal static string Snix_Execute {
            get {
                return ResourceManager.GetString("Snix_Execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to establish a MARS session in preparation to send the request to the server..
        /// </summary>
        internal static string Snix_GetMarsSession {
            get {
                return ResourceManager.GetString("Snix_GetMarsSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection was successfully established with the server, but then an error occurred during the login process..
        /// </summary>
        internal static string Snix_Login {
            get {
                return ResourceManager.GetString("Snix_Login", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection was successfully established with the server, but then an error occurred when obtaining the security/SSPI context information for integrated security login..
        /// </summary>
        internal static string Snix_LoginSspi {
            get {
                return ResourceManager.GetString("Snix_LoginSspi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection was successfully established with the server, but then an error occurred during the pre-login handshake..
        /// </summary>
        internal static string Snix_PreLogin {
            get {
                return ResourceManager.GetString("Snix_PreLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client was unable to establish a connection because of an error during connection initialization process before login. Possible causes include the following:  the client tried to connect to an unsupported version of SQL Server; the server was too busy to accept new connections; or there was a resource limitation (insufficient memory or maximum allowed connections) on the server..
        /// </summary>
        internal static string Snix_PreLoginBeforeSuccessfulWrite {
            get {
                return ResourceManager.GetString("Snix_PreLoginBeforeSuccessfulWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transport-level error has occurred during SSPI handshake..
        /// </summary>
        internal static string Snix_ProcessSspi {
            get {
                return ResourceManager.GetString("Snix_ProcessSspi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transport-level error has occurred when receiving results from the server..
        /// </summary>
        internal static string Snix_Read {
            get {
                return ResourceManager.GetString("Snix_Read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transport-level error has occurred while sending information to the server..
        /// </summary>
        internal static string Snix_SendRows {
            get {
                return ResourceManager.GetString("Snix_SendRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;Authentication&apos; with &apos;Integrated Security&apos;..
        /// </summary>
        internal static string SQL_AuthenticationAndIntegratedSecurity {
            get {
                return ResourceManager.GetString("SQL_AuthenticationAndIntegratedSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Batching updates is not supported on the context connection..
        /// </summary>
        internal static string SQL_BatchedUpdatesNotAvailableOnContextConnection {
            get {
                return ResourceManager.GetString("SQL_BatchedUpdatesNotAvailableOnContextConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlBulkCopy.WriteToServer failed because the SqlBulkCopy.DestinationTableName is an invalid multipart name.
        /// </summary>
        internal static string SQL_BulkCopyDestinationTableName {
            get {
                return ResourceManager.GetString("SQL_BulkCopyDestinationTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given value of type {0} from the data source cannot be converted to type {1} of the specified target column..
        /// </summary>
        internal static string SQL_BulkLoadCannotConvertValue {
            get {
                return ResourceManager.GetString("SQL_BulkLoadCannotConvertValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must not specify SqlBulkCopyOption.UseInternalTransaction and pass an external Transaction at the same time..
        /// </summary>
        internal static string SQL_BulkLoadConflictingTransactionOption {
            get {
                return ResourceManager.GetString("SQL_BulkLoadConflictingTransactionOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected existing transaction..
        /// </summary>
        internal static string SQL_BulkLoadExistingTransaction {
            get {
                return ResourceManager.GetString("SQL_BulkLoadExistingTransaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access destination table &apos;{0}&apos;..
        /// </summary>
        internal static string SQL_BulkLoadInvalidDestinationTable {
            get {
                return ResourceManager.GetString("SQL_BulkLoadInvalidDestinationTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function must not be called during event..
        /// </summary>
        internal static string SQL_BulkLoadInvalidOperationInsideEvent {
            get {
                return ResourceManager.GetString("SQL_BulkLoadInvalidOperationInsideEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout Value &apos;{0}&apos; is less than 0..
        /// </summary>
        internal static string SQL_BulkLoadInvalidTimeout {
            get {
                return ResourceManager.GetString("SQL_BulkLoadInvalidTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be converted to SqlVariant..
        /// </summary>
        internal static string SQL_BulkLoadInvalidVariantValue {
            get {
                return ResourceManager.GetString("SQL_BulkLoadInvalidVariantValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The locale id &apos;{0}&apos; of the source column &apos;{1}&apos; and the locale id &apos;{2}&apos; of the destination column &apos;{3}&apos; do not match..
        /// </summary>
        internal static string Sql_BulkLoadLcidMismatch {
            get {
                return ResourceManager.GetString("Sql_BulkLoadLcidMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mapped collection is in use and cannot be accessed at this time;.
        /// </summary>
        internal static string SQL_BulkLoadMappingInaccessible {
            get {
                return ResourceManager.GetString("SQL_BulkLoadMappingInaccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mappings must be either all name or all ordinal based..
        /// </summary>
        internal static string SQL_BulkLoadMappingsNamesOrOrdinalsOnly {
            get {
                return ResourceManager.GetString("SQL_BulkLoadMappingsNamesOrOrdinalsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The DestinationTableName property must be set before calling this method..
        /// </summary>
        internal static string SQL_BulkLoadMissingDestinationTable {
            get {
                return ResourceManager.GetString("SQL_BulkLoadMissingDestinationTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain column collation information for the destination table. If the table is not in the current database the name must be qualified using the database name (e.g. [mydb]..[mytable](e.g. [mydb]..[mytable]); this also applies to temporary-tables (e.g. #mytable would be specified as tempdb..#mytable)..
        /// </summary>
        internal static string SQL_BulkLoadNoCollation {
            get {
                return ResourceManager.GetString("SQL_BulkLoadNoCollation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given ColumnMapping does not match up with any column in the source or destination..
        /// </summary>
        internal static string SQL_BulkLoadNonMatchingColumnMapping {
            get {
                return ResourceManager.GetString("SQL_BulkLoadNonMatchingColumnMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given ColumnName &apos;{0}&apos; does not match up with any column in data source..
        /// </summary>
        internal static string SQL_BulkLoadNonMatchingColumnName {
            get {
                return ResourceManager.GetString("SQL_BulkLoadNonMatchingColumnName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column &apos;{0}&apos; does not allow DBNull.Value..
        /// </summary>
        internal static string SQL_BulkLoadNotAllowDBNull {
            get {
                return ResourceManager.GetString("SQL_BulkLoadNotAllowDBNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempt to invoke bulk copy on an object that has a pending operation..
        /// </summary>
        internal static string SQL_BulkLoadPendingOperation {
            get {
                return ResourceManager.GetString("SQL_BulkLoadPendingOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String or binary data would be truncated in table &apos;{0}&apos;, column &apos;{1}&apos;. Truncated value: &apos;{2}&apos;..
        /// </summary>
        internal static string SQL_BulkLoadStringTooLong {
            get {
                return ResourceManager.GetString("SQL_BulkLoadStringTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to instantiate a SqlAuthenticationInitializer with type &apos;{0}&apos;..
        /// </summary>
        internal static string SQL_CannotCreateAuthInitializer {
            get {
                return ResourceManager.GetString("SQL_CannotCreateAuthInitializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to instantiate an authentication provider with type &apos;{1}&apos; for &apos;{0}&apos;..
        /// </summary>
        internal static string SQL_CannotCreateAuthProvider {
            get {
                return ResourceManager.GetString("SQL_CannotCreateAuthProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create normalizer for &apos;{0}&apos;..
        /// </summary>
        internal static string SQL_CannotCreateNormalizer {
            get {
                return ResourceManager.GetString("SQL_CannotCreateNormalizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find an authentication provider for &apos;{0}&apos;..
        /// </summary>
        internal static string SQL_CannotFindAuthProvider {
            get {
                return ResourceManager.GetString("SQL_CannotFindAuthProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read the config section for authentication providers..
        /// </summary>
        internal static string SQL_CannotGetAuthProviderConfig {
            get {
                return ResourceManager.GetString("SQL_CannotGetAuthProviderConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to get the address of the distributed transaction coordinator for the server, from the server.  Is DTC enabled on the server?.
        /// </summary>
        internal static string SQL_CannotGetDTCAddress {
            get {
                return ResourceManager.GetString("SQL_CannotGetDTCAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider &apos;{0}&apos; threw an exception while initializing..
        /// </summary>
        internal static string SQL_CannotInitializeAuthProvider {
            get {
                return ResourceManager.GetString("SQL_CannotInitializeAuthProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cannot be changed while async operation is in progress..
        /// </summary>
        internal static string SQL_CannotModifyPropertyAsyncOperationInProgress {
            get {
                return ResourceManager.GetString("SQL_CannotModifyPropertyAsyncOperationInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; argument must not be null or empty..
        /// </summary>
        internal static string SQL_ChangePasswordArgumentMissing {
            get {
                return ResourceManager.GetString("SQL_ChangePasswordArgumentMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChangePassword can only be used with SQL authentication, not with integrated security..
        /// </summary>
        internal static string SQL_ChangePasswordConflictsWithSSPI {
            get {
                return ResourceManager.GetString("SQL_ChangePasswordConflictsWithSSPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ChangePassword requires SQL Server 9.0 or later..
        /// </summary>
        internal static string SQL_ChangePasswordRequiresYukon {
            get {
                return ResourceManager.GetString("SQL_ChangePasswordRequiresYukon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The keyword &apos;{0}&apos; must not be specified in the connectionString argument to ChangePassword..
        /// </summary>
        internal static string SQL_ChangePasswordUseOfUnallowedKey {
            get {
                return ResourceManager.GetString("SQL_ChangePasswordUseOfUnallowedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested operation cannot be completed because the connection has been broken..
        /// </summary>
        internal static string SQL_ConnectionDoomed {
            get {
                return ResourceManager.GetString("SQL_ConnectionDoomed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection cannot be used because there is an ongoing operation that must be finished..
        /// </summary>
        internal static string SQL_ConnectionLockedForBcpEvent {
            get {
                return ResourceManager.GetString("SQL_ConnectionLockedForBcpEvent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either Credential or both &apos;User ID&apos; and &apos;Password&apos; (or &apos;UID&apos; and &apos;PWD&apos;) connection string keywords must be specified, if &apos;Authentication={0}&apos;..
        /// </summary>
        internal static string SQL_CredentialsNotProvided {
            get {
                return ResourceManager.GetString("SQL_CredentialsNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Collation specified by SQL Server is not supported..
        /// </summary>
        internal static string SQL_CultureIdError {
            get {
                return ResourceManager.GetString("SQL_CultureIdError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} is not supported on this platform..
        /// </summary>
        internal static string SQL_DbTypeNotSupportedOnThisPlatform {
            get {
                return ResourceManager.GetString("SQL_DbTypeNotSupportedOnThisPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; .
        /// </summary>
        internal static string SQL_Duration_Login_Begin {
            get {
                return ResourceManager.GetString("SQL_Duration_Login_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; authentication={3}; .
        /// </summary>
        internal static string SQL_Duration_Login_ProcessConnectionAuth {
            get {
                return ResourceManager.GetString("SQL_Duration_Login_ProcessConnectionAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; authentication={3}; [Post-Login] complete={4}; .
        /// </summary>
        internal static string SQL_Duration_PostLogin {
            get {
                return ResourceManager.GetString("SQL_Duration_PostLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0};.
        /// </summary>
        internal static string SQL_Duration_PreLogin_Begin {
            get {
                return ResourceManager.GetString("SQL_Duration_PreLogin_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; .
        /// </summary>
        internal static string SQL_Duration_PreLoginHandshake {
            get {
                return ResourceManager.GetString("SQL_Duration_PreLoginHandshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance of SQL Server you attempted to connect to requires encryption but this machine does not support it..
        /// </summary>
        internal static string SQL_EncryptionNotSupportedByClient {
            get {
                return ResourceManager.GetString("SQL_EncryptionNotSupportedByClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The instance of SQL Server you attempted to connect to does not support encryption..
        /// </summary>
        internal static string SQL_EncryptionNotSupportedByServer {
            get {
                return ResourceManager.GetString("SQL_EncryptionNotSupportedByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of fields in record &apos;{0}&apos; does not match the number in the original record..
        /// </summary>
        internal static string SQL_EnumeratedRecordFieldCountChanged {
            get {
                return ResourceManager.GetString("SQL_EnumeratedRecordFieldCountChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Metadata for field &apos;{0}&apos; of record &apos;{1}&apos; did not match the original record&apos;s metadata..
        /// </summary>
        internal static string SQL_EnumeratedRecordMetaDataChanged {
            get {
                return ResourceManager.GetString("SQL_EnumeratedRecordMetaDataChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientConnectionId:{0}.
        /// </summary>
        internal static string SQL_ExClientConnectionId {
            get {
                return ResourceManager.GetString("SQL_ExClientConnectionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Number:{0},State:{1},Class:{2}.
        /// </summary>
        internal static string SQL_ExErrorNumberStateClass {
            get {
                return ResourceManager.GetString("SQL_ExErrorNumberStateClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientConnectionId before routing:{0}.
        /// </summary>
        internal static string SQL_ExOriginalClientConnectionId {
            get {
                return ResourceManager.GetString("SQL_ExOriginalClientConnectionId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Routing Destination:{0}.
        /// </summary>
        internal static string SQL_ExRoutingDestination {
            get {
                return ResourceManager.GetString("SQL_ExRoutingDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Globalization Invariant Mode is not supported..
        /// </summary>
        internal static string SQL_GlobalizationInvariantModeNotSupported {
            get {
                return ResourceManager.GetString("SQL_GlobalizationInvariantModeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance failure..
        /// </summary>
        internal static string SQL_InstanceFailure {
            get {
                return ResourceManager.GetString("SQL_InstanceFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;Authentication=Active Directory Integrated&apos; with &apos;User ID&apos;, &apos;UID&apos;, &apos;Password&apos; or &apos;PWD&apos; connection string keywords..
        /// </summary>
        internal static string SQL_IntegratedWithUserIDAndPassword {
            get {
                return ResourceManager.GetString("SQL_IntegratedWithUserIDAndPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;Authentication=Active Directory Interactive&apos; without &apos;User ID&apos; or &apos;UID&apos; connection string keywords..
        /// </summary>
        internal static string SQL_InteractiveWithoutUserID {
            get {
                return ResourceManager.GetString("SQL_InteractiveWithoutUserID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot use &apos;Authentication=Active Directory Interactive&apos; with &apos;PWD&apos; connection string keywords..
        /// </summary>
        internal static string SQL_InteractiveWithPassword {
            get {
                return ResourceManager.GetString("SQL_InteractiveWithPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error.
        /// </summary>
        internal static string Sql_InternalError {
            get {
                return ResourceManager.GetString("Sql_InternalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer offset &apos;{1}&apos; plus the bytes available &apos;{0}&apos; is greater than the length of the passed in buffer..
        /// </summary>
        internal static string SQL_InvalidBufferSizeOrIndex {
            get {
                return ResourceManager.GetString("SQL_InvalidBufferSizeOrIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data length &apos;{0}&apos; is less than 0..
        /// </summary>
        internal static string SQL_InvalidDataLength {
            get {
                return ResourceManager.GetString("SQL_InvalidDataLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid internal packet size:.
        /// </summary>
        internal static string SQL_InvalidInternalPacketSize {
            get {
                return ResourceManager.GetString("SQL_InvalidInternalPacketSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid &apos;Packet Size&apos;.  The value must be an integer &gt;= 512 and &lt;= 32768..
        /// </summary>
        internal static string SQL_InvalidPacketSizeValue {
            get {
                return ResourceManager.GetString("SQL_InvalidPacketSizeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the parameter &apos;{0}&apos; exceeds the limit of 128 characters..
        /// </summary>
        internal static string SQL_InvalidParameterNameLength {
            get {
                return ResourceManager.GetString("SQL_InvalidParameterNameLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid 3 part name format for TypeName..
        /// </summary>
        internal static string SQL_InvalidParameterTypeNameFormat {
            get {
                return ResourceManager.GetString("SQL_InvalidParameterTypeNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server {0}, database {1} is not configured for database mirroring..
        /// </summary>
        internal static string SQL_InvalidPartnerConfiguration {
            get {
                return ResourceManager.GetString("SQL_InvalidPartnerConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to read when no data is present..
        /// </summary>
        internal static string SQL_InvalidRead {
            get {
                return ResourceManager.GetString("SQL_InvalidRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported SQL Server version.  The .NET Framework SqlClient Data Provider can only be used with SQL Server versions 7.0 and later..
        /// </summary>
        internal static string SQL_InvalidSQLServerVersionUnknown {
            get {
                return ResourceManager.GetString("SQL_InvalidSQLServerVersionUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SSPI packet size..
        /// </summary>
        internal static string SQL_InvalidSSPIPacketSize {
            get {
                return ResourceManager.GetString("SQL_InvalidSSPIPacketSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Packet Size..
        /// </summary>
        internal static string SQL_InvalidTDSPacketSize {
            get {
                return ResourceManager.GetString("SQL_InvalidTDSPacketSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SQL Server instance returned an invalid or unsupported protocol version during login negotiation..
        /// </summary>
        internal static string SQL_InvalidTDSVersion {
            get {
                return ResourceManager.GetString("SQL_InvalidTDSVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid 3 part name format for UdtTypeName..
        /// </summary>
        internal static string SQL_InvalidUdt3PartNameFormat {
            get {
                return ResourceManager.GetString("SQL_InvalidUdt3PartNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot authenticate using Kerberos. Ensure Kerberos has been initialized on the client with &apos;kinit&apos; and a Service Principal Name has been registered for the SQL Server to allow Kerberos authentication..
        /// </summary>
        internal static string SQL_KerberosTicketMissingError {
            get {
                return ResourceManager.GetString("SQL_KerberosTicketMissingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection does not support MultipleActiveResultSets..
        /// </summary>
        internal static string SQL_MarsUnsupportedOnConnection {
            get {
                return ResourceManager.GetString("SQL_MarsUnsupportedOnConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlDbType.SmallMoney overflow.  Value &apos;{0}&apos; is out of range.  Must be between -214,748.3648 and 214,748.3647..
        /// </summary>
        internal static string SQL_MoneyOverflow {
            get {
                return ResourceManager.GetString("SQL_MoneyOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to authenticate the user {0} in Active Directory (Authentication={1})..
        /// </summary>
        internal static string SQL_MSALFailure {
            get {
                return ResourceManager.GetString("SQL_MSALFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error code 0x{0}; state {1}.
        /// </summary>
        internal static string SQL_MSALInnerException {
            get {
                return ResourceManager.GetString("SQL_MSALInnerException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The keyword &apos;Network Library&apos; is not supported on this platform, prefix the &apos;Data Source&apos; with the protocol desired instead (&apos;tcp:&apos; for a TCP connection, or &apos;np:&apos; for a Named Pipe connection)..
        /// </summary>
        internal static string SQL_NetworkLibraryNotSupported {
            get {
                return ResourceManager.GetString("SQL_NetworkLibraryNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to GetBytes on column &apos;{0}&apos;.  The GetBytes function can only be used on columns of type Text, NText, or Image..
        /// </summary>
        internal static string SQL_NonBlobColumn {
            get {
                return ResourceManager.GetString("SQL_NonBlobColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to GetChars on column &apos;{0}&apos;.  The GetChars function can only be used on columns of type Text, NText, Xml, VarChar or NVarChar..
        /// </summary>
        internal static string SQL_NonCharColumn {
            get {
                return ResourceManager.GetString("SQL_NonCharColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSE Instance re-direction is not supported for non-local user instances..
        /// </summary>
        internal static string SQL_NonLocalSSEInstance {
            get {
                return ResourceManager.GetString("SQL_NonLocalSSEInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command sent to ExecuteXmlReader.  The command must return an Xml result..
        /// </summary>
        internal static string SQL_NonXmlResult {
            get {
                return ResourceManager.GetString("SQL_NonXmlResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} enumeration value, {1}, is not supported by the .NET Framework SqlClient Data Provider..
        /// </summary>
        internal static string SQL_NotSupportedEnumerationValue {
            get {
                return ResourceManager.GetString("SQL_NotSupportedEnumerationValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid transaction or invalid name for a point at which to save within the transaction..
        /// </summary>
        internal static string SQL_NullEmptyTransactionName {
            get {
                return ResourceManager.GetString("SQL_NullEmptyTransactionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open result count exceeded..
        /// </summary>
        internal static string SQL_OpenResultCountExceeded {
            get {
                return ResourceManager.GetString("SQL_OpenResultCountExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation cancelled by user..
        /// </summary>
        internal static string SQL_OperationCancelled {
            get {
                return ResourceManager.GetString("SQL_OperationCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; cannot be null or empty..
        /// </summary>
        internal static string SQL_ParameterCannotBeEmpty {
            get {
                return ResourceManager.GetString("SQL_ParameterCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; exceeds the size limit for the sql_variant datatype..
        /// </summary>
        internal static string SQL_ParameterInvalidVariant {
            get {
                return ResourceManager.GetString("SQL_ParameterInvalidVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} type parameter &apos;{1}&apos; must have a valid type name..
        /// </summary>
        internal static string SQL_ParameterTypeNameRequired {
            get {
                return ResourceManager.GetString("SQL_ParameterTypeNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error..
        /// </summary>
        internal static string SQL_ParsingError {
            get {
                return ResourceManager.GetString("SQL_ParsingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}, Authentication Library Type: {1}..
        /// </summary>
        internal static string SQL_ParsingErrorAuthLibraryType {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorAuthLibraryType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}, Feature Id: {1}..
        /// </summary>
        internal static string SQL_ParsingErrorFeatureId {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorFeatureId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}, Length: {1}.
        /// </summary>
        internal static string SQL_ParsingErrorLength {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}, Offset: {1}.
        /// </summary>
        internal static string SQL_ParsingErrorOffset {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}, Status: {1}.
        /// </summary>
        internal static string SQL_ParsingErrorStatus {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}, Token : {1}.
        /// </summary>
        internal static string SQL_ParsingErrorToken {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}, Value: {1}..
        /// </summary>
        internal static string SQL_ParsingErrorValue {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal connection fatal error. Error state: {0}..
        /// </summary>
        internal static string SQL_ParsingErrorWithState {
            get {
                return ResourceManager.GetString("SQL_ParsingErrorWithState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command execution cannot proceed due to a pending asynchronous operation already in progress..
        /// </summary>
        internal static string SQL_PendingBeginXXXExists {
            get {
                return ResourceManager.GetString("SQL_PendingBeginXXXExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precision value &apos;{0}&apos; is either less than 0 or greater than the maximum allowed precision of 38..
        /// </summary>
        internal static string SQL_PrecisionValueOutOfRange {
            get {
                return ResourceManager.GetString("SQL_PrecisionValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale value &apos;{0}&apos; is either less than 0 or greater than the maximum allowed scale of 38..
        /// </summary>
        internal static string SQL_ScaleValueOutOfRange {
            get {
                return ResourceManager.GetString("SQL_ScaleValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A severe error occurred on the current command.  The results, if any, should be discarded..
        /// </summary>
        internal static string SQL_SevereError {
            get {
                return ResourceManager.GetString("SQL_SevereError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlDbType.SmallDateTime overflow.  Value &apos;{0}&apos; is out of range.  Must be between 1/1/1900 12:00:00 AM and 6/6/2079 11:59:59 PM..
        /// </summary>
        internal static string SQL_SmallDateTimeOverflow {
            get {
                return ResourceManager.GetString("SQL_SmallDateTimeOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory allocation for internal connection failed..
        /// </summary>
        internal static string SQL_SNIPacketAllocationFailure {
            get {
                return ResourceManager.GetString("SQL_SNIPacketAllocationFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlCommand.DeriveParameters failed because the SqlCommand.CommandText property value is an invalid multipart name.
        /// </summary>
        internal static string SQL_SqlCommandCommandText {
            get {
                return ResourceManager.GetString("SQL_SqlCommandCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot connect to SQL Server Browser. Ensure SQL Server Browser has been started..
        /// </summary>
        internal static string SQL_SqlServerBrowserNotAccessible {
            get {
                return ResourceManager.GetString("SQL_SqlServerBrowserNotAccessible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate SSPI context..
        /// </summary>
        internal static string SQL_SSPIGenerateError {
            get {
                return ResourceManager.GetString("SQL_SSPIGenerateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initialize SSPI package..
        /// </summary>
        internal static string SQL_SSPIInitializeError {
            get {
                return ResourceManager.GetString("SQL_SSPIInitializeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to GetStream on column &apos;{0}&apos;. The GetStream function can only be used on columns of type Binary, Image, Udt or VarBinary..
        /// </summary>
        internal static string SQL_StreamNotSupportOnColumnType {
            get {
                return ResourceManager.GetString("SQL_StreamNotSupportOnColumnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Stream does not support reading..
        /// </summary>
        internal static string SQL_StreamReadNotSupported {
            get {
                return ResourceManager.GetString("SQL_StreamReadNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Stream does not support seeking..
        /// </summary>
        internal static string SQL_StreamSeekNotSupported {
            get {
                return ResourceManager.GetString("SQL_StreamSeekNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Stream does not support writing..
        /// </summary>
        internal static string SQL_StreamWriteNotSupported {
            get {
                return ResourceManager.GetString("SQL_StreamWriteNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing of results from SQL Server failed because of an invalid multipart name.
        /// </summary>
        internal static string SQL_TDSParserTableName {
            get {
                return ResourceManager.GetString("SQL_TDSParserTableName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to GetTextReader on column &apos;{0}&apos;. The GetTextReader function can only be used on columns of type Char, NChar, NText, NVarChar, Text or VarChar..
        /// </summary>
        internal static string SQL_TextReaderNotSupportOnColumnType {
            get {
                return ResourceManager.GetString("SQL_TextReaderNotSupportOnColumnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding..
        /// </summary>
        internal static string SQL_Timeout {
            get {
                return ResourceManager.GetString("SQL_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding..
        /// </summary>
        internal static string SQL_Timeout_Execution {
            get {
                return ResourceManager.GetString("SQL_Timeout_Execution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This failure occurred while attempting to connect to the {0} server..
        /// </summary>
        internal static string SQL_Timeout_FailoverInfo {
            get {
                return ResourceManager.GetString("SQL_Timeout_FailoverInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout Expired.  The timeout period elapsed at the start of the login phase.  This could be because of insufficient time provided for connection timeout..
        /// </summary>
        internal static string SQL_Timeout_Login_Begin {
            get {
                return ResourceManager.GetString("SQL_Timeout_Login_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout Expired.  The timeout period elapsed while attempting to authenticate the login.  This could be because the server failed to authenticate the user or the server was unable to respond back in time..
        /// </summary>
        internal static string SQL_Timeout_Login_ProcessConnectionAuth {
            get {
                return ResourceManager.GetString("SQL_Timeout_Login_ProcessConnectionAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections..
        /// </summary>
        internal static string SQL_Timeout_PostLogin {
            get {
                return ResourceManager.GetString("SQL_Timeout_PostLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout Expired.  The timeout period elapsed at the start of the pre-login phase.  This could be because of insufficient time provided for connection timeout..
        /// </summary>
        internal static string SQL_Timeout_PreLogin_Begin {
            get {
                return ResourceManager.GetString("SQL_Timeout_PreLogin_Begin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time..
        /// </summary>
        internal static string SQL_Timeout_PreLogin_ConsumeHandshake {
            get {
                return ResourceManager.GetString("SQL_Timeout_PreLogin_ConsumeHandshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout Expired.  The timeout period elapsed while attempting to create and initialize a socket to the server.  This could be either because the server was unreachable or unable to respond back in time..
        /// </summary>
        internal static string SQL_Timeout_PreLogin_InitializeConnection {
            get {
                return ResourceManager.GetString("SQL_Timeout_PreLogin_InitializeConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Timeout Expired.  The timeout period elapsed while making a pre-login handshake request.  This could be because the server was unable to respond back in time..
        /// </summary>
        internal static string SQL_Timeout_PreLogin_SendHandshake {
            get {
                return ResourceManager.GetString("SQL_Timeout_PreLogin_SendHandshake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This failure occurred while attempting to connect to the routing destination. The duration spent while attempting to connect to the original server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; authentication={3}; [Post-Login] complete={4};  .
        /// </summary>
        internal static string SQL_Timeout_RoutingDestinationInfo {
            get {
                return ResourceManager.GetString("SQL_Timeout_RoutingDestinationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlDbType.Time overflow.  Value &apos;{0}&apos; is out of range.  Must be between 00:00:00.0000000 and 23:59:59.9999999..
        /// </summary>
        internal static string SQL_TimeOverflow {
            get {
                return ResourceManager.GetString("SQL_TimeOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale value &apos;{0}&apos; is either less than 0 or greater than the maximum allowed scale of 7..
        /// </summary>
        internal static string SQL_TimeScaleValueOutOfRange {
            get {
                return ResourceManager.GetString("SQL_TimeScaleValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlParameter.TypeName is an invalid multipart name.
        /// </summary>
        internal static string SQL_TypeName {
            get {
                return ResourceManager.GetString("SQL_TypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlParameter.UdtTypeName is an invalid multipart name.
        /// </summary>
        internal static string SQL_UDTTypeName {
            get {
                return ResourceManager.GetString("SQL_UDTTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized System.Transactions.IsolationLevel enumeration value: {0}..
        /// </summary>
        internal static string SQL_UnknownSysTxIsolationLevel {
            get {
                return ResourceManager.GetString("SQL_UnknownSysTxIsolationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string SQL_UnsupportedAuthentication {
            get {
                return ResourceManager.GetString("SQL_UnsupportedAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provider &apos;{0}&apos; does not support authentication &apos;{1}&apos;..
        /// </summary>
        internal static string SQL_UnsupportedAuthenticationByProvider {
            get {
                return ResourceManager.GetString("SQL_UnsupportedAuthenticationByProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server is attempting to use a feature that is not supported on this platform..
        /// </summary>
        internal static string SQL_UnsupportedFeature {
            get {
                return ResourceManager.GetString("SQL_UnsupportedFeature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The keyword &apos;{0}&apos; is not supported on this platform..
        /// </summary>
        internal static string SQL_UnsupportedKeyword {
            get {
                return ResourceManager.GetString("SQL_UnsupportedKeyword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL authentication method &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string SQL_UnsupportedSqlAuthenticationMethod {
            get {
                return ResourceManager.GetString("SQL_UnsupportedSqlAuthenticationMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The currently loaded System.Transactions.dll does not support Global Transactions..
        /// </summary>
        internal static string SQL_UnsupportedSysTxVersion {
            get {
                return ResourceManager.GetString("SQL_UnsupportedSysTxVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Received an unsupported token &apos;{0}&apos; while reading data from the server..
        /// </summary>
        internal static string SQL_UnsupportedToken {
            get {
                return ResourceManager.GetString("SQL_UnsupportedToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Instance and Failover are not compatible options.  Please choose only one of the two in the connection string..
        /// </summary>
        internal static string SQL_UserInstanceFailoverNotCompatible {
            get {
                return ResourceManager.GetString("SQL_UserInstanceFailoverNotCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user instance was requested in the connection string but the server specified does not support this option..
        /// </summary>
        internal static string SQL_UserInstanceFailure {
            get {
                return ResourceManager.GetString("SQL_UserInstanceFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting argument of type {1}, but received type {0}..
        /// </summary>
        internal static string SQL_WrongType {
            get {
                return ResourceManager.GetString("SQL_WrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to GetXmlReader on column &apos;{0}&apos;. The GetXmlReader function can only be used on columns of type Xml..
        /// </summary>
        internal static string SQL_XmlReaderNotSupportOnColumnType {
            get {
                return ResourceManager.GetString("SQL_XmlReaderNotSupportOnColumnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert object of type &apos;{0}&apos; to object of type &apos;{1}&apos;..
        /// </summary>
        internal static string SqlConvert_ConvertFailed {
            get {
                return ResourceManager.GetString("SqlConvert_ConvertFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts..
        /// </summary>
        internal static string SQLCR_AllAttemptsFailed {
            get {
                return ResourceManager.GetString("SQLCR_AllAttemptsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server did not preserve SSL encryption during a recovery attempt, connection recovery is not possible..
        /// </summary>
        internal static string SQLCR_EncryptionChanged {
            get {
                return ResourceManager.GetString("SQLCR_EncryptionChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid ConnectRetryCount value (should be 0-255)..
        /// </summary>
        internal static string SQLCR_InvalidConnectRetryCountValue {
            get {
                return ResourceManager.GetString("SQLCR_InvalidConnectRetryCountValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid ConnectRetryInterval value (should be 1-60)..
        /// </summary>
        internal static string SQLCR_InvalidConnectRetryIntervalValue {
            get {
                return ResourceManager.GetString("SQLCR_InvalidConnectRetryIntervalValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next reconnection attempt will exceed query timeout. Reconnection was terminated..
        /// </summary>
        internal static string SQLCR_NextAttemptWillExceedQueryTimeout {
            get {
                return ResourceManager.GetString("SQLCR_NextAttemptWillExceedQueryTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server did not acknowledge a recovery attempt, connection recovery is not possible..
        /// </summary>
        internal static string SQLCR_NoCRAckAtReconnection {
            get {
                return ResourceManager.GetString("SQLCR_NoCRAckAtReconnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server did not preserve the exact client TDS version requested during a recovery attempt, connection recovery is not possible..
        /// </summary>
        internal static string SQLCR_TDSVestionNotPreserved {
            get {
                return ResourceManager.GetString("SQLCR_TDSVestionNotPreserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection is broken and recovery is not possible.  The connection is marked by the client driver as unrecoverable.  No attempt was made to restore the connection..
        /// </summary>
        internal static string SQLCR_UnrecoverableClient {
            get {
                return ResourceManager.GetString("SQLCR_UnrecoverableClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection is broken and recovery is not possible.  The connection is marked by the server as unrecoverable.  No attempt was made to restore the connection..
        /// </summary>
        internal static string SQLCR_UnrecoverableServer {
            get {
                return ResourceManager.GetString("SQLCR_UnrecoverableServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure while attempting to promote transaction..
        /// </summary>
        internal static string SqlDelegatedTransaction_PromotionFailed {
            get {
                return ResourceManager.GetString("SqlDelegatedTransaction_PromotionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SQL Server Service Broker for the current database is not enabled, and as a result query notifications are not supported.  Please enable the Service Broker for this database if you wish to use notifications..
        /// </summary>
        internal static string SqlDependency_DatabaseBrokerDisabled {
            get {
                return ResourceManager.GetString("SqlDependency_DatabaseBrokerDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When using SqlDependency without providing an options value, SqlDependency.Start() must be called prior to execution of a command added to the SqlDependency instance..
        /// </summary>
        internal static string SqlDependency_DefaultOptionsButNoStart {
            get {
                return ResourceManager.GetString("SqlDependency_DefaultOptionsButNoStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlDependency does not support calling Start() with different connection strings having the same server, user, and database in the same app domain..
        /// </summary>
        internal static string SqlDependency_DuplicateStart {
            get {
                return ResourceManager.GetString("SqlDependency_DuplicateStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlDependency.OnChange does not support multiple event registrations for the same delegate..
        /// </summary>
        internal static string SqlDependency_EventNoDuplicate {
            get {
                return ResourceManager.GetString("SqlDependency_EventNoDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No SqlDependency exists for the key..
        /// </summary>
        internal static string SqlDependency_IdMismatch {
            get {
                return ResourceManager.GetString("SqlDependency_IdMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout specified is invalid. Timeout cannot be &lt; 0..
        /// </summary>
        internal static string SqlDependency_InvalidTimeout {
            get {
                return ResourceManager.GetString("SqlDependency_InvalidTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlDependency.Start has been called for the server the command is executing against more than once, but there is no matching server/user/database Start() call for current command..
        /// </summary>
        internal static string SqlDependency_NoMatchingServerDatabaseStart {
            get {
                return ResourceManager.GetString("SqlDependency_NoMatchingServerDatabaseStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When using SqlDependency without providing an options value, SqlDependency.Start() must be called for each server that is being executed against..
        /// </summary>
        internal static string SqlDependency_NoMatchingServerStart {
            get {
                return ResourceManager.GetString("SqlDependency_NoMatchingServerStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process cannot access the file specified because it has been opened in another transaction..
        /// </summary>
        internal static string SqlFileStream_FileAlreadyInTransaction {
            get {
                return ResourceManager.GetString("SqlFileStream_FileAlreadyInTransaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid parameter was passed to the function..
        /// </summary>
        internal static string SqlFileStream_InvalidParameter {
            get {
                return ResourceManager.GetString("SqlFileStream_InvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path name is not valid..
        /// </summary>
        internal static string SqlFileStream_InvalidPath {
            get {
                return ResourceManager.GetString("SqlFileStream_InvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlFileStream is not supported on this platform..
        /// </summary>
        internal static string SqlFileStream_NotSupported {
            get {
                return ResourceManager.GetString("SqlFileStream_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path name is invalid or does not point to a disk file..
        /// </summary>
        internal static string SqlFileStream_PathNotValidDiskResource {
            get {
                return ResourceManager.GetString("SqlFileStream_PathNotValidDiskResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dbType {0} is invalid for this constructor..
        /// </summary>
        internal static string SqlMetaData_InvalidSqlDbTypeForConstructorFormat {
            get {
                return ResourceManager.GetString("SqlMetaData_InvalidSqlDbTypeForConstructorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name is too long..
        /// </summary>
        internal static string SqlMetaData_NameTooLong {
            get {
                return ResourceManager.GetString("SqlMetaData_NameTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sort order and ordinal must either both be specified, or neither should be specified (SortOrder.Unspecified and -1).  The values given were: order = {0}, ordinal = {1}..
        /// </summary>
        internal static string SqlMetaData_SpecifyBothSortOrderAndOrdinal {
            get {
                return ResourceManager.GetString("SqlMetaData_SpecifyBothSortOrderAndOrdinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Type has already been loaded with data..
        /// </summary>
        internal static string SqlMisc_AlreadyFilledMessage {
            get {
                return ResourceManager.GetString("SqlMisc_AlreadyFilledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arithmetic Overflow..
        /// </summary>
        internal static string SqlMisc_ArithOverflowMessage {
            get {
                return ResourceManager.GetString("SqlMisc_ArithOverflowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to access a closed XmlReader..
        /// </summary>
        internal static string SqlMisc_ClosedXmlReaderMessage {
            get {
                return ResourceManager.GetString("SqlMisc_ClosedXmlReaderMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two strings to be compared have different collation..
        /// </summary>
        internal static string SqlMisc_CompareDiffCollationMessage {
            get {
                return ResourceManager.GetString("SqlMisc_CompareDiffCollationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two strings to be concatenated have different collation..
        /// </summary>
        internal static string SqlMisc_ConcatDiffCollationMessage {
            get {
                return ResourceManager.GetString("SqlMisc_ConcatDiffCollationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversion overflows..
        /// </summary>
        internal static string SqlMisc_ConversionOverflowMessage {
            get {
                return ResourceManager.GetString("SqlMisc_ConversionOverflowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM..
        /// </summary>
        internal static string SqlMisc_DateTimeOverflowMessage {
            get {
                return ResourceManager.GetString("SqlMisc_DateTimeOverflowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Divide by zero error encountered..
        /// </summary>
        internal static string SqlMisc_DivideByZeroMessage {
            get {
                return ResourceManager.GetString("SqlMisc_DivideByZeroMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The input wasn&apos;t in a correct format..
        /// </summary>
        internal static string SqlMisc_FormatMessage {
            get {
                return ResourceManager.GetString("SqlMisc_FormatMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid array size..
        /// </summary>
        internal static string SqlMisc_InvalidArraySizeMessage {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidArraySizeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SqlDateTime..
        /// </summary>
        internal static string SqlMisc_InvalidDateTimeMessage {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidDateTimeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid flag value..
        /// </summary>
        internal static string SqlMisc_InvalidFlagMessage {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidFlagMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to call {0} when the stream is closed..
        /// </summary>
        internal static string SqlMisc_InvalidOpStreamClosed {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidOpStreamClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to call {0} when the stream non-readable..
        /// </summary>
        internal static string SqlMisc_InvalidOpStreamNonReadable {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidOpStreamNonReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to call {0} when the stream is non-seekable..
        /// </summary>
        internal static string SqlMisc_InvalidOpStreamNonSeekable {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidOpStreamNonSeekable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to call {0} when the stream non-writable..
        /// </summary>
        internal static string SqlMisc_InvalidOpStreamNonWritable {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidOpStreamNonWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid numeric precision/scale..
        /// </summary>
        internal static string SqlMisc_InvalidPrecScaleMessage {
            get {
                return ResourceManager.GetString("SqlMisc_InvalidPrecScaleMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message.
        /// </summary>
        internal static string SqlMisc_MessageString {
            get {
                return ResourceManager.GetString("SqlMisc_MessageString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQL Type has not been loaded with data..
        /// </summary>
        internal static string SqlMisc_NotFilledMessage {
            get {
                return ResourceManager.GetString("SqlMisc_NotFilledMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null.
        /// </summary>
        internal static string SqlMisc_NullString {
            get {
                return ResourceManager.GetString("SqlMisc_NullString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data is Null. This method or property cannot be called on Null values..
        /// </summary>
        internal static string SqlMisc_NullValueMessage {
            get {
                return ResourceManager.GetString("SqlMisc_NullValueMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversion from SqlDecimal to Decimal overflows..
        /// </summary>
        internal static string SqlMisc_NumeToDecOverflowMessage {
            get {
                return ResourceManager.GetString("SqlMisc_NumeToDecOverflowMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while reading..
        /// </summary>
        internal static string SqlMisc_StreamErrorMessage {
            get {
                return ResourceManager.GetString("SqlMisc_StreamErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subclass did not override a required method..
        /// </summary>
        internal static string SqlMisc_SubclassMustOverride {
            get {
                return ResourceManager.GetString("SqlMisc_SubclassMustOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A time zone was specified. SqlDateTime does not support time zones..
        /// </summary>
        internal static string SqlMisc_TimeZoneSpecifiedMessage {
            get {
                return ResourceManager.GetString("SqlMisc_TimeZoneSpecifiedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data returned is larger than 2Gb in size. Use SequentialAccess command behavior in order to get all of the data..
        /// </summary>
        internal static string SqlMisc_TruncationMaxDataMessage {
            get {
                return ResourceManager.GetString("SqlMisc_TruncationMaxDataMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Numeric arithmetic causes truncation..
        /// </summary>
        internal static string SqlMisc_TruncationMessage {
            get {
                return ResourceManager.GetString("SqlMisc_TruncationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to a mirrored SQL Server instance using the MultiSubnetFailover connection option is not supported..
        /// </summary>
        internal static string SQLMSF_FailoverPartnerNotSupported {
            get {
                return ResourceManager.GetString("SQLMSF_FailoverPartnerNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This SqlCommand object is already associated with another SqlDependency object..
        /// </summary>
        internal static string SQLNotify_AlreadyHasCommand {
            get {
                return ResourceManager.GetString("SQLNotify_AlreadyHasCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DBNull value for parameter &apos;{0}&apos; is not supported. Table-valued parameters cannot be DBNull..
        /// </summary>
        internal static string SqlParameter_DBNullNotSupportedForTVP {
            get {
                return ResourceManager.GetString("SqlParameter_DBNullNotSupportedForTVP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precision &apos;{0}&apos; required to send all values in column &apos;{1}&apos; exceeds the maximum supported precision &apos;{2}&apos;. The values must all fit in a single precision..
        /// </summary>
        internal static string SqlParameter_InvalidTableDerivedPrecisionForTvp {
            get {
                return ResourceManager.GetString("SqlParameter_InvalidTableDerivedPrecisionForTvp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TypeName specified for parameter &apos;{0}&apos;.  TypeName must only be set for Structured parameters..
        /// </summary>
        internal static string SqlParameter_UnexpectedTypeNameForNonStruct {
            get {
                return ResourceManager.GetString("SqlParameter_UnexpectedTypeNameForNonStruct", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ParameterDirection &apos;{0}&apos; specified for parameter &apos;{1}&apos; is not supported. Table-valued parameters only support ParameterDirection.Input..
        /// </summary>
        internal static string SqlParameter_UnsupportedTVPOutputParameter {
            get {
                return ResourceManager.GetString("SqlParameter_UnsupportedTVPOutputParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sort ordinal {0} was specified twice..
        /// </summary>
        internal static string SqlProvider_DuplicateSortOrdinal {
            get {
                return ResourceManager.GetString("SqlProvider_DuplicateSortOrdinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of column &apos;{0}&apos; is not supported. The size is {1}..
        /// </summary>
        internal static string SqlProvider_InvalidDataColumnMaxLength {
            get {
                return ResourceManager.GetString("SqlProvider_InvalidDataColumnMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of column &apos;{0}&apos; is not supported.  The type is &apos;{1}&apos;.
        /// </summary>
        internal static string SqlProvider_InvalidDataColumnType {
            get {
                return ResourceManager.GetString("SqlProvider_InvalidDataColumnType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sort ordinal {0} was not specified..
        /// </summary>
        internal static string SqlProvider_MissingSortOrdinal {
            get {
                return ResourceManager.GetString("SqlProvider_MissingSortOrdinal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are not enough fields in the Structured type.  Structured types must have at least one field..
        /// </summary>
        internal static string SqlProvider_NotEnoughColumnsInStructuredType {
            get {
                return ResourceManager.GetString("SqlProvider_NotEnoughColumnsInStructuredType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sort ordinal {0} on field {1} exceeds the total number of fields..
        /// </summary>
        internal static string SqlProvider_SortOrdinalGreaterThanFieldCount {
            get {
                return ResourceManager.GetString("SqlProvider_SortOrdinalGreaterThanFieldCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to a mirrored SQL Server instance using the ApplicationIntent ReadOnly connection option is not supported..
        /// </summary>
        internal static string SQLROR_FailoverNotSupported {
            get {
                return ResourceManager.GetString("SQLROR_FailoverNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid routing information received..
        /// </summary>
        internal static string SQLROR_InvalidRoutingInfo {
            get {
                return ResourceManager.GetString("SQLROR_InvalidRoutingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Two or more redirections have occurred. Only one redirection per login is allowed..
        /// </summary>
        internal static string SQLROR_RecursiveRoutingNotSupported {
            get {
                return ResourceManager.GetString("SQLROR_RecursiveRoutingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server provided routing information, but timeout already expired..
        /// </summary>
        internal static string SQLROR_TimeoutAfterRoutingInfo {
            get {
                return ResourceManager.GetString("SQLROR_TimeoutAfterRoutingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected routing information received..
        /// </summary>
        internal static string SQLROR_UnexpectedRoutingInfo {
            get {
                return ResourceManager.GetString("SQLROR_UnexpectedRoutingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified type is not registered on the target server. {0}..
        /// </summary>
        internal static string SQLUDT_InvalidSqlType {
            get {
                return ResourceManager.GetString("SQLUDT_InvalidSqlType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is an invalid user defined type, reason: {1}..
        /// </summary>
        internal static string SqlUdt_InvalidUdtMessage {
            get {
                return ResourceManager.GetString("SqlUdt_InvalidUdtMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UdtTypeName property must be set for UDT parameters..
        /// </summary>
        internal static string SQLUDT_InvalidUdtTypeName {
            get {
                return ResourceManager.GetString("SQLUDT_InvalidUdtTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to range: 0-8000.
        /// </summary>
        internal static string SQLUDT_MaxByteSizeValue {
            get {
                return ResourceManager.GetString("SQLUDT_MaxByteSizeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unexpected error encountered in SqlClient data provider. {0}.
        /// </summary>
        internal static string SQLUDT_Unexpected {
            get {
                return ResourceManager.GetString("SQLUDT_Unexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UdtTypeName property must be set only for UDT parameters..
        /// </summary>
        internal static string SQLUDT_UnexpectedUdtTypeName {
            get {
                return ResourceManager.GetString("SQLUDT_UnexpectedUdtTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to no UDT attribute.
        /// </summary>
        internal static string SqlUdtReason_NoUdtAttribute {
            get {
                return ResourceManager.GetString("SqlUdtReason_NoUdtAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a supported handle type..
        /// </summary>
        internal static string SSPIInvalidHandleType {
            get {
                return ResourceManager.GetString("SSPIInvalidHandleType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attestation information was not returned by SQL Server. Enclave type is &apos;{0}&apos; and enclave attestation URL is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_AttestationInfoNotReturnedFromSQLServer {
            get {
                return ResourceManager.GetString("TCE_AttestationInfoNotReturnedFromSQLServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} should be identical on all commands ({1}, {2}, {3}, {4}) when doing batch updates..
        /// </summary>
        internal static string TCE_BatchedUpdateColumnEncryptionSettingMismatch {
            get {
                return ResourceManager.GetString("TCE_BatchedUpdateColumnEncryptionSettingMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to instantiate an enclave provider with type &apos;{1}&apos; for name &apos;{0}&apos;. Error message: {2}.
        /// </summary>
        internal static string TCE_CannotCreateSqlColumnEncryptionEnclaveProvider {
            get {
                return ResourceManager.GetString("TCE_CannotCreateSqlColumnEncryptionEnclaveProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read the configuration section for enclave providers. Make sure the section is correctly formatted in your application configuration file. Error Message: {0}.
        /// </summary>
        internal static string TCE_CannotGetSqlColumnEncryptionEnclaveProviderConfig {
            get {
                return ResourceManager.GetString("TCE_CannotGetSqlColumnEncryptionEnclaveProviderConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key store providers cannot be set more than once..
        /// </summary>
        internal static string TCE_CanOnlyCallOnce {
            get {
                return ResourceManager.GetString("TCE_CanOnlyCallOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate with thumbprint &apos;{0}&apos; not found in certificate store &apos;{1}&apos; in certificate location &apos;{2}&apos;..
        /// </summary>
        internal static string TCE_CertificateNotFound {
            get {
                return ResourceManager.GetString("TCE_CertificateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate with thumbprint &apos;{0}&apos; not found in certificate store &apos;{1}&apos; in certificate location &apos;{2}&apos;. Verify the certificate path in the column master key definition in the database is correct, and the certificate has been imported correctly into the certificate location/store..
        /// </summary>
        internal static string TCE_CertificateNotFoundSysErr {
            get {
                return ResourceManager.GetString("TCE_CertificateNotFoundSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate specified in key path &apos;{0}&apos; does not have a private key to encrypt a column encryption key. Verify the certificate is imported correctly..
        /// </summary>
        internal static string TCE_CertificateWithNoPrivateKey {
            get {
                return ResourceManager.GetString("TCE_CertificateWithNoPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate specified in key path &apos;{0}&apos; does not have a private key to decrypt a column encryption key. Verify the certificate is imported correctly..
        /// </summary>
        internal static string TCE_CertificateWithNoPrivateKeySysErr {
            get {
                return ResourceManager.GetString("TCE_CertificateWithNoPrivateKeySysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decrypt column &apos;{0}&apos;..
        /// </summary>
        internal static string TCE_ColumnDecryptionFailed {
            get {
                return ResourceManager.GetString("TCE_ColumnDecryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Encrypted column encryption keys not found when trying to send the keys to the enclave..
        /// </summary>
        internal static string TCE_ColumnEncryptionKeysNotFound {
            get {
                return ResourceManager.GetString("TCE_ColumnEncryptionKeysNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. The signature returned by SQL Server for enclave-enabled column master key, specified at key path &apos;{0}&apos;, cannot be null or empty..
        /// </summary>
        internal static string TCE_ColumnMasterKeySignatureNotFound {
            get {
                return ResourceManager.GetString("TCE_ColumnMasterKeySignatureNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signature returned by SQL Server for the column master key, specified in key path &apos;{0}&apos;, is invalid (does not match the computed signature). Recreate column master key metadata, making sure the signature inside the metadata is computed using the column master key being referenced in the metadata. If the error persists, please contact Microsoft for assistance..
        /// </summary>
        internal static string TCE_ColumnMasterKeySignatureVerificationFailed {
            get {
                return ResourceManager.GetString("TCE_ColumnMasterKeySignatureVerificationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decryption failed. The last 10 bytes of the encrypted column encryption key are: &apos;{0}&apos;. The first 10 bytes of ciphertext are: &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_DecryptionFailed {
            get {
                return ResourceManager.GetString("TCE_DecryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Empty argument &apos;{0}&apos; specified when constructing an object of type &apos;{1}&apos;. &apos;{0}&apos; cannot be empty..
        /// </summary>
        internal static string TCE_EmptyArgumentInConstructorInternal {
            get {
                return ResourceManager.GetString("TCE_EmptyArgumentInConstructorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Argument &apos;{0}&apos; cannot be empty when executing method &apos;{1}.{2}&apos;..
        /// </summary>
        internal static string TCE_EmptyArgumentInternal {
            get {
                return ResourceManager.GetString("TCE_EmptyArgumentInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty certificate thumbprint specified in certificate path &apos;{0}&apos;..
        /// </summary>
        internal static string TCE_EmptyCertificateThumbprint {
            get {
                return ResourceManager.GetString("TCE_EmptyCertificateThumbprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Empty certificate thumbprint specified in certificate path &apos;{0}&apos;..
        /// </summary>
        internal static string TCE_EmptyCertificateThumbprintSysErr {
            get {
                return ResourceManager.GetString("TCE_EmptyCertificateThumbprintSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty key identifier specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCngKeyId {
            get {
                return ResourceManager.GetString("TCE_EmptyCngKeyId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Empty key identifier specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCngKeyIdSysErr {
            get {
                return ResourceManager.GetString("TCE_EmptyCngKeyIdSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Microsoft Cryptography API: Next Generation (CNG) provider name specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCngName {
            get {
                return ResourceManager.GetString("TCE_EmptyCngName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Empty Microsoft Cryptography API: Next Generation (CNG) provider name specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCngNameSysErr {
            get {
                return ResourceManager.GetString("TCE_EmptyCngNameSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty column encryption key specified..
        /// </summary>
        internal static string TCE_EmptyColumnEncryptionKey {
            get {
                return ResourceManager.GetString("TCE_EmptyColumnEncryptionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty key identifier specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCspKeyId {
            get {
                return ResourceManager.GetString("TCE_EmptyCspKeyId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Empty key identifier specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCspKeyIdSysErr {
            get {
                return ResourceManager.GetString("TCE_EmptyCspKeyIdSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Microsoft cryptographic service provider (CSP) name specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCspName {
            get {
                return ResourceManager.GetString("TCE_EmptyCspName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Empty Microsoft cryptographic service provider (CSP) name specified in column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_EmptyCspNameSysErr {
            get {
                return ResourceManager.GetString("TCE_EmptyCspNameSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Empty encrypted column encryption key specified..
        /// </summary>
        internal static string TCE_EmptyEncryptedColumnEncryptionKey {
            get {
                return ResourceManager.GetString("TCE_EmptyEncryptedColumnEncryptionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid key store provider name specified. Key store provider names cannot be null or empty..
        /// </summary>
        internal static string TCE_EmptyProviderName {
            get {
                return ResourceManager.GetString("TCE_EmptyProviderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have specified the enclave attestation URL in the connection string, but the SQL Server instance in use does not support enclave based computations..
        /// </summary>
        internal static string TCE_EnclaveComputationsNotSupported {
            get {
                return ResourceManager.GetString("TCE_EnclaveComputationsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No enclave provider found for enclave type &apos;{0}&apos;. Please specify the provider in the application configuration..
        /// </summary>
        internal static string TCE_EnclaveProviderNotFound {
            get {
                return ResourceManager.GetString("TCE_EnclaveProviderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing a query requires enclave computations, but the application configuration is missing the enclave provider section..
        /// </summary>
        internal static string TCE_EnclaveProvidersNotConfiguredForEnclaveBasedQuery {
            get {
                return ResourceManager.GetString("TCE_EnclaveProvidersNotConfiguredForEnclaveBasedQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have specified the enclave attestation URL in the connection string, but the SQL Server instance did not return an enclave type. Please make sure the enclave type is correctly configured in your instance..
        /// </summary>
        internal static string TCE_EnclaveTypeNotReturned {
            get {
                return ResourceManager.GetString("TCE_EnclaveTypeNotReturned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Enclave type received from SQL Server is null or empty when executing a query requiring enclave computations..
        /// </summary>
        internal static string TCE_EnclaveTypeNullForEnclaveBasedQuery {
            get {
                return ResourceManager.GetString("TCE_EnclaveTypeNullForEnclaveBasedQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error encountered while generating package to be sent to enclave. Error message: {0}.
        /// </summary>
        internal static string TCE_ExceptionWhenGeneratingEnclavePackage {
            get {
                return ResourceManager.GetString("TCE_ExceptionWhenGeneratingEnclavePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error.  Failed to encrypt byte package to be sent to the enclave. Error Message: {0}.
        /// </summary>
        internal static string TCE_FailedToEncryptRegisterRulesBytePackage {
            get {
                return ResourceManager.GetString("TCE_FailedToEncryptRegisterRulesBytePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. The buffer specified by argument &apos;{0}&apos; for method &apos;{1}.{2}&apos; has insufficient space..
        /// </summary>
        internal static string TCE_InsufficientBuffer {
            get {
                return ResourceManager.GetString("TCE_InsufficientBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified ciphertext&apos;s encryption algorithm version &apos;{0}&apos; does not match the expected encryption algorithm version &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_InvalidAlgorithmVersion {
            get {
                return ResourceManager.GetString("TCE_InvalidAlgorithmVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified encrypted column encryption key contains an invalid encryption algorithm version &apos;{0}&apos;. Expected version is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_InvalidAlgorithmVersionInEncryptedCEK {
            get {
                return ResourceManager.GetString("TCE_InvalidAlgorithmVersionInEncryptedCEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attestation parameters specified by the enclave provider for enclave type &apos;{0}&apos;. Error occurred when converting the value &apos;{1}&apos; of parameter &apos;{2}&apos; to unsigned int. Error Message: {3}.
        /// </summary>
        internal static string TCE_InvalidAttestationParameterUnableToConvertToUnsignedInt {
            get {
                return ResourceManager.GetString("TCE_InvalidAttestationParameterUnableToConvertToUnsignedInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified ciphertext has an invalid authentication tag..
        /// </summary>
        internal static string TCE_InvalidAuthenticationTag {
            get {
                return ResourceManager.GetString("TCE_InvalidAuthenticationTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate location &apos;{0}&apos; in certificate path &apos;{1}&apos;. Use the following format: &lt;certificate location&gt;{4}&lt;certificate store&gt;{4}&lt;certificate thumbprint&gt;, where &lt;certificate location&gt; is either &apos;{2}&apos; or &apos;{3}&apos;..
        /// </summary>
        internal static string TCE_InvalidCertificateLocation {
            get {
                return ResourceManager.GetString("TCE_InvalidCertificateLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid certificate location &apos;{0}&apos; in certificate path &apos;{1}&apos;. Use the following format: &lt;certificate location&gt;{4}&lt;certificate store&gt;{4}&lt;certificate thumbprint&gt;, where &lt;certificate location&gt; is either &apos;{2}&apos; or &apos;{3}&apos;..
        /// </summary>
        internal static string TCE_InvalidCertificateLocationSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCertificateLocationSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate path: &apos;{0}&apos;. Use the following format: &lt;certificate location&gt;{3}&lt;certificate store&gt;{3}&lt;certificate thumbprint&gt;, where &lt;certificate location&gt; is either &apos;{1}&apos; or &apos;{2}&apos;..
        /// </summary>
        internal static string TCE_InvalidCertificatePath {
            get {
                return ResourceManager.GetString("TCE_InvalidCertificatePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid certificate path: &apos;{0}&apos;. Use the following format: &lt;certificate location&gt;{3}&lt;certificate store&gt;{3}&lt;certificate thumbprint&gt;, where &lt;certificate location&gt; is either &apos;{1}&apos; or &apos;{2}&apos;..
        /// </summary>
        internal static string TCE_InvalidCertificatePathSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCertificatePathSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key signature does not match the signature computed with the column master key (certificate) in &apos;{0}&apos;. The encrypted column encryption key may be corrupt, or the specified path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidCertificateSignature {
            get {
                return ResourceManager.GetString("TCE_InvalidCertificateSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid certificate store &apos;{0}&apos; specified in certificate path &apos;{1}&apos;. Expected value: &apos;{2}&apos;..
        /// </summary>
        internal static string TCE_InvalidCertificateStore {
            get {
                return ResourceManager.GetString("TCE_InvalidCertificateStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid certificate store &apos;{0}&apos; specified in certificate path &apos;{1}&apos;. Expected value: &apos;{2}&apos;..
        /// </summary>
        internal static string TCE_InvalidCertificateStoreSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCertificateStoreSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key&apos;s ciphertext length: {0} does not match the ciphertext length: {1} when using column master key (certificate) in &apos;{2}&apos;. The encrypted column encryption key may be corrupt, or the specified certificate path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidCiphertextLengthInEncryptedCEK {
            get {
                return ResourceManager.GetString("TCE_InvalidCiphertextLengthInEncryptedCEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key&apos;s ciphertext length: {0} does not match the ciphertext length: {1} when using column master key (asymmetric key) in &apos;{2}&apos;. The encrypted column encryption key may be corrupt, or the specified Microsoft Cryptography API: Next Generation (CNG) provider path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidCiphertextLengthInEncryptedCEKCng {
            get {
                return ResourceManager.GetString("TCE_InvalidCiphertextLengthInEncryptedCEKCng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key&apos;s ciphertext length: {0} does not match the ciphertext length: {1} when using column master key (asymmetric key) in &apos;{2}&apos;. The encrypted column encryption key may be corrupt, or the specified Microsoft Cryptographic Service provider (CSP) path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidCiphertextLengthInEncryptedCEKCsp {
            get {
                return ResourceManager.GetString("TCE_InvalidCiphertextLengthInEncryptedCEKCsp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified ciphertext has an invalid size of {0} bytes, which is below the minimum {1} bytes required for decryption..
        /// </summary>
        internal static string TCE_InvalidCipherTextSize {
            get {
                return ResourceManager.GetString("TCE_InvalidCipherTextSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while opening the Microsoft Cryptography API: Next Generation (CNG) key: &apos;{0}&apos;. Verify that the CNG provider name &apos;{1}&apos; is valid, installed on the machine, and the key &apos;{2}&apos; exists..
        /// </summary>
        internal static string TCE_InvalidCngKey {
            get {
                return ResourceManager.GetString("TCE_InvalidCngKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. An error occurred while opening the Microsoft Cryptography API: Next Generation (CNG) key: &apos;{0}&apos;. Verify that the CNG provider name &apos;{1}&apos; is valid, installed on the machine, and the key &apos;{2}&apos; exists..
        /// </summary>
        internal static string TCE_InvalidCngKeySysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCngKeySysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_InvalidCngPath {
            get {
                return ResourceManager.GetString("TCE_InvalidCngPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_InvalidCngPathSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCngPathSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid key identifier: &apos;{0}&apos;. Verify that the key identifier in column master key path: &apos;{1}&apos; is valid and exists in the CSP..
        /// </summary>
        internal static string TCE_InvalidCspKeyId {
            get {
                return ResourceManager.GetString("TCE_InvalidCspKeyId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid key identifier: &apos;{0}&apos;. Verify that the key identifier in column master key path: &apos;{1}&apos; is valid and exists in the CSP..
        /// </summary>
        internal static string TCE_InvalidCspKeyIdSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCspKeyIdSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Microsoft cryptographic service provider (CSP) name: &apos;{0}&apos;. Verify that the CSP provider name in column master key path: &apos;{1}&apos; is valid and installed on the machine..
        /// </summary>
        internal static string TCE_InvalidCspName {
            get {
                return ResourceManager.GetString("TCE_InvalidCspName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid Microsoft cryptographic service provider (CSP) name: &apos;{0}&apos;. Verify that the CSP provider name in column master key path: &apos;{1}&apos; is valid and installed on the machine..
        /// </summary>
        internal static string TCE_InvalidCspNameSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCspNameSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_InvalidCspPath {
            get {
                return ResourceManager.GetString("TCE_InvalidCspPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid column master key path: &apos;{0}&apos;. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{1}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_InvalidCspPathSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidCspPathSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid key store provider name &apos;{0}&apos;. &apos;{1}&apos; prefix is reserved for system key store providers..
        /// </summary>
        internal static string TCE_InvalidCustomKeyStoreProviderName {
            get {
                return ResourceManager.GetString("TCE_InvalidCustomKeyStoreProviderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. The given database id &apos;{0}&apos; is not valid. Error occurred when converting the database id to unsigned int. Error Message: {1}.
        /// </summary>
        internal static string TCE_InvalidDatabaseIdUnableToCastToUnsignedInt {
            get {
                return ResourceManager.GetString("TCE_InvalidDatabaseIdUnableToCastToUnsignedInt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Error occurred when populating enclave metadata. The referenced column encryption key ordinal &apos;{0}&apos; is missing in the encryption metadata returned by SQL Server. Max ordinal is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_InvalidEncryptionKeyOrdinalEnclaveMetadata {
            get {
                return ResourceManager.GetString("TCE_InvalidEncryptionKeyOrdinalEnclaveMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Error occurred when populating parameter metadata. The referenced column encryption key ordinal &apos;{0}&apos; is missing in the encryption metadata returned by SQL Server. Max ordinal is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_InvalidEncryptionKeyOrdinalParameterMetadata {
            get {
                return ResourceManager.GetString("TCE_InvalidEncryptionKeyOrdinalParameterMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption type &apos;{1}&apos; specified for the column in the database is either invalid or corrupted. Valid encryption types for algorithm &apos;{0}&apos; are: {2}..
        /// </summary>
        internal static string TCE_InvalidEncryptionType {
            get {
                return ResourceManager.GetString("TCE_InvalidEncryptionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid key encryption algorithm specified: &apos;{0}&apos;. Expected value: &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_InvalidKeyEncryptionAlgorithm {
            get {
                return ResourceManager.GetString("TCE_InvalidKeyEncryptionAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Invalid key encryption algorithm specified: &apos;{0}&apos;. Expected value: &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_InvalidKeyEncryptionAlgorithmSysErr {
            get {
                return ResourceManager.GetString("TCE_InvalidKeyEncryptionAlgorithmSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. The given key id &apos;{0}&apos; is not valid. Error occurred when converting the key id to unsigned short. Error Message: {1}.
        /// </summary>
        internal static string TCE_InvalidKeyIdUnableToCastToUnsignedShort {
            get {
                return ResourceManager.GetString("TCE_InvalidKeyIdUnableToCastToUnsignedShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column encryption key has been successfully decrypted but it&apos;s length: {1} does not match the length: {2} for algorithm &apos;{0}&apos;. Verify the encrypted value of the column encryption key in the database..
        /// </summary>
        internal static string TCE_InvalidKeySize {
            get {
                return ResourceManager.GetString("TCE_InvalidKeySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid key store provider name: &apos;{0}&apos;. A key store provider name must denote either a system key store provider or a registered custom key store provider. Valid system key store provider names are: {1}. Valid (currently registered) custom key store provider names are: {2}. Please verify key store provider information in column master key definitions in the database, and verify all custom key store providers used in your application are registered properly..
        /// </summary>
        internal static string TCE_InvalidKeyStoreProviderName {
            get {
                return ResourceManager.GetString("TCE_InvalidKeyStoreProviderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key signature does not match the signature computed with the column master key (asymmetric key) in &apos;{0}&apos;. The encrypted column encryption key may be corrupt, or the specified path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidSignature {
            get {
                return ResourceManager.GetString("TCE_InvalidSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key&apos;s signature length: {0} does not match the signature length: {1} when using column master key (certificate) in &apos;{2}&apos;. The encrypted column encryption key may be corrupt, or the specified certificate path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidSignatureInEncryptedCEK {
            get {
                return ResourceManager.GetString("TCE_InvalidSignatureInEncryptedCEK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key&apos;s signature length: {0} does not match the signature length: {1} when using column master key (asymmetric key) in &apos;{2}&apos;. The encrypted column encryption key may be corrupt, or the specified Microsoft Cryptography API: Next Generation (CNG) provider path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidSignatureInEncryptedCEKCng {
            get {
                return ResourceManager.GetString("TCE_InvalidSignatureInEncryptedCEKCng", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified encrypted column encryption key&apos;s signature length: {0} does not match the signature length: {1} when using column master key (asymmetric key) in &apos;{2}&apos;. The encrypted column encryption key may be corrupt, or the specified Microsoft cryptographic service provider (CSP) path may be incorrect..
        /// </summary>
        internal static string TCE_InvalidSignatureInEncryptedCEKCsp {
            get {
                return ResourceManager.GetString("TCE_InvalidSignatureInEncryptedCEKCsp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decrypt a column encryption key using key store provider: &apos;{0}&apos;. Verify the properties of the column encryption key and its column master key in your database. The last 10 bytes of the encrypted column encryption key are: &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_KeyDecryptionFailed {
            get {
                return ResourceManager.GetString("TCE_KeyDecryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decrypt a column encryption key using key store provider: &apos;{0}&apos;. The last 10 bytes of the encrypted column encryption key are: &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_KeyDecryptionFailedCertStore {
            get {
                return ResourceManager.GetString("TCE_KeyDecryptionFailedCertStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified certificate path has {0} bytes, which exceeds maximum length of {1} bytes..
        /// </summary>
        internal static string TCE_LargeCertificatePathLength {
            get {
                return ResourceManager.GetString("TCE_LargeCertificatePathLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Specified certificate path has {0} bytes, which exceeds maximum length of {1} bytes..
        /// </summary>
        internal static string TCE_LargeCertificatePathLengthSysErr {
            get {
                return ResourceManager.GetString("TCE_LargeCertificatePathLengthSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Error occurred when parsing the results of &apos;{0}&apos;. The attestation information resultset is expected to contain only one row, but it contains multiple rows..
        /// </summary>
        internal static string TCE_MultipleRowsReturnedForAttestationInfo {
            get {
                return ResourceManager.GetString("TCE_MultipleRowsReturnedForAttestationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured when generating enclave package. Attestation URL has not been specified in the connection string, but the query requires enclave computations.  Enclave type is &apos;{0}&apos;..
        /// </summary>
        internal static string TCE_NoAttestationUrlSpecifiedForEnclaveBasedQueryGeneratingEnclavePackage {
            get {
                return ResourceManager.GetString("TCE_NoAttestationUrlSpecifiedForEnclaveBasedQueryGeneratingEnclavePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occured when reading &apos;{0}&apos; resultset. Attestation URL has not been specified in the connection string, but the query requires enclave computations.  Enclave type is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_NoAttestationUrlSpecifiedForEnclaveBasedQuerySpDescribe {
            get {
                return ResourceManager.GetString("TCE_NoAttestationUrlSpecifiedForEnclaveBasedQuerySpDescribe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} instance in use does not support column encryption..
        /// </summary>
        internal static string TCE_NotSupportedByServer {
            get {
                return ResourceManager.GetString("TCE_NotSupportedByServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Null argument &apos;{0}&apos; specified when constructing an object of type &apos;{1}&apos;. &apos;{0}&apos; cannot be null..
        /// </summary>
        internal static string TCE_NullArgumentInConstructorInternal {
            get {
                return ResourceManager.GetString("TCE_NullArgumentInConstructorInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Argument &apos;{0}&apos; cannot be null when executing method &apos;{1}.{2}&apos;..
        /// </summary>
        internal static string TCE_NullArgumentInternal {
            get {
                return ResourceManager.GetString("TCE_NullArgumentInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate path cannot be null. Use the following format: &lt;certificate location&gt;{2}&lt;certificate store&gt;{2}&lt;certificate thumbprint&gt;, where &lt;certificate location&gt; is either &apos;{0}&apos; or &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_NullCertificatePath {
            get {
                return ResourceManager.GetString("TCE_NullCertificatePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Certificate path cannot be null. Use the following format: &lt;certificate location&gt;{2}&lt;certificate store&gt;{2}&lt;certificate thumbprint&gt;, where &lt;certificate location&gt; is either &apos;{0}&apos; or &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_NullCertificatePathSysErr {
            get {
                return ResourceManager.GetString("TCE_NullCertificatePathSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Ciphertext value cannot be null..
        /// </summary>
        internal static string TCE_NullCipherText {
            get {
                return ResourceManager.GetString("TCE_NullCipherText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column master key path cannot be null. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{0}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_NullCngPath {
            get {
                return ResourceManager.GetString("TCE_NullCngPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Column master key path cannot be null. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: &lt;CNG Provider Name&gt;{0}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_NullCngPathSysErr {
            get {
                return ResourceManager.GetString("TCE_NullCngPathSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Encryption algorithm cannot be null. Valid algorithms are: {0}..
        /// </summary>
        internal static string TCE_NullColumnEncryptionAlgorithm {
            get {
                return ResourceManager.GetString("TCE_NullColumnEncryptionAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column encryption key cannot be null..
        /// </summary>
        internal static string TCE_NullColumnEncryptionKey {
            get {
                return ResourceManager.GetString("TCE_NullColumnEncryptionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Column encryption key cannot be null..
        /// </summary>
        internal static string TCE_NullColumnEncryptionKeySysErr {
            get {
                return ResourceManager.GetString("TCE_NullColumnEncryptionKeySysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column master key path cannot be null. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{0}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_NullCspPath {
            get {
                return ResourceManager.GetString("TCE_NullCspPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Column master key path cannot be null. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): &lt;CSP Provider Name&gt;{0}&lt;Key Identifier&gt;..
        /// </summary>
        internal static string TCE_NullCspPathSysErr {
            get {
                return ResourceManager.GetString("TCE_NullCspPathSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column encryption key store provider dictionary cannot be null. Expecting a non-null value..
        /// </summary>
        internal static string TCE_NullCustomKeyStoreProviderDictionary {
            get {
                return ResourceManager.GetString("TCE_NullCustomKeyStoreProviderDictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Enclave package is null during execution of an enclave based query. Enclave type is &apos;{0}&apos; and enclaveAttestationUrl is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_NullEnclavePackageForEnclaveBasedQuery {
            get {
                return ResourceManager.GetString("TCE_NullEnclavePackageForEnclaveBasedQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Enclave session is null during query execution. Enclave type is &apos;{0}&apos; and enclaveAttestationUrl is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_NullEnclaveSessionDuringQueryExecution {
            get {
                return ResourceManager.GetString("TCE_NullEnclaveSessionDuringQueryExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to communicate with the enclave. Null enclave session information received from the enclave provider. Enclave type is &apos;{0}&apos; and enclave attestation URL is &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_NullEnclaveSessionReturnedFromProvider {
            get {
                return ResourceManager.GetString("TCE_NullEnclaveSessionReturnedFromProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Encrypted column encryption key cannot be null..
        /// </summary>
        internal static string TCE_NullEncryptedColumnEncryptionKey {
            get {
                return ResourceManager.GetString("TCE_NullEncryptedColumnEncryptionKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key encryption algorithm cannot be null..
        /// </summary>
        internal static string TCE_NullKeyEncryptionAlgorithm {
            get {
                return ResourceManager.GetString("TCE_NullKeyEncryptionAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Key encryption algorithm cannot be null..
        /// </summary>
        internal static string TCE_NullKeyEncryptionAlgorithmSysErr {
            get {
                return ResourceManager.GetString("TCE_NullKeyEncryptionAlgorithmSysErr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Plaintext value cannot be null..
        /// </summary>
        internal static string TCE_NullPlainText {
            get {
                return ResourceManager.GetString("TCE_NullPlainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Null reference specified for key store provider &apos;{0}&apos;. Expecting a non-null value..
        /// </summary>
        internal static string TCE_NullProviderValue {
            get {
                return ResourceManager.GetString("TCE_NullProviderValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. Failed to serialize keys to be sent to the enclave. The start offset specified by argument &apos;{0}&apos; for method {1}.{2} is out of bounds..
        /// </summary>
        internal static string TCE_OffsetOutOfBounds {
            get {
                return ResourceManager.GetString("TCE_OffsetOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decrypt parameter &apos;{0}&apos;..
        /// </summary>
        internal static string TCE_ParamDecryptionFailed {
            get {
                return ResourceManager.GetString("TCE_ParamDecryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to encrypt parameter &apos;{0}&apos;..
        /// </summary>
        internal static string TCE_ParamEncryptionFailed {
            get {
                return ResourceManager.GetString("TCE_ParamEncryptionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Metadata for parameter &apos;{1}&apos; in statement or procedure &apos;{2}&apos; is missing in resultset returned by {0}..
        /// </summary>
        internal static string TCE_ParamEncryptionMetaDataMissing {
            get {
                return ResourceManager.GetString("TCE_ParamEncryptionMetaDataMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot set {0} for {3} &apos;{1}&apos; because encryption is not enabled for the statement or procedure &apos;{2}&apos;..
        /// </summary>
        internal static string TCE_ParamInvalidForceColumnEncryptionSetting {
            get {
                return ResourceManager.GetString("TCE_ParamInvalidForceColumnEncryptionSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot execute statement or procedure &apos;{1}&apos; because {2} was set for {3} &apos;{0}&apos; and the database expects this parameter to be sent as plaintext. This may be due to a configuration error..
        /// </summary>
        internal static string TCE_ParamUnExpectedEncryptionMetadata {
            get {
                return ResourceManager.GetString("TCE_ParamUnExpectedEncryptionMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. Metadata for parameters for command &apos;{1}&apos; in a batch is missing in the resultset returned by {0}..
        /// </summary>
        internal static string TCE_ProcEncryptionMetaDataMissing {
            get {
                return ResourceManager.GetString("TCE_ProcEncryptionMetaDataMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving encrypted column &apos;{0}&apos; with {1} is not supported..
        /// </summary>
        internal static string TCE_SequentialAccessNotSupportedOnEncryptedColumn {
            get {
                return ResourceManager.GetString("TCE_SequentialAccessNotSupportedOnEncryptedColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Error. SqlColumnEncryptionEnclaveProviderName cannot be null or empty..
        /// </summary>
        internal static string TCE_SqlColumnEncryptionEnclaveProviderNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("TCE_SqlColumnEncryptionEnclaveProviderNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving encrypted column &apos;{0}&apos; as a {1} is not supported..
        /// </summary>
        internal static string TCE_StreamNotSupportOnEncryptedColumn {
            get {
                return ResourceManager.GetString("TCE_StreamNotSupportOnEncryptedColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to verify a column master key signature. Error message: {0}.
        /// </summary>
        internal static string TCE_UnableToVerifyColumnMasterKeySignature {
            get {
                return ResourceManager.GetString("TCE_UnableToVerifyColumnMasterKeySignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. The result returned by &apos;{0}&apos; is invalid. The attestation information resultset is missing for enclave type &apos;{1}&apos;..
        /// </summary>
        internal static string TCE_UnexpectedDescribeParamFormatAttestationInfo {
            get {
                return ResourceManager.GetString("TCE_UnexpectedDescribeParamFormatAttestationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error. The result returned by &apos;{0}&apos; is invalid. The parameter metadata resultset is missing..
        /// </summary>
        internal static string TCE_UnexpectedDescribeParamFormatParameterMetadata {
            get {
                return ResourceManager.GetString("TCE_UnexpectedDescribeParamFormatParameterMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption algorithm &apos;{0}&apos; for the column in the database is either invalid or corrupted. Valid algorithms are: {1}..
        /// </summary>
        internal static string TCE_UnknownColumnEncryptionAlgorithm {
            get {
                return ResourceManager.GetString("TCE_UnknownColumnEncryptionAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption algorithm id &apos;{0}&apos; for the column in the database is either invalid or corrupted. Valid encryption algorithm ids are: {1}..
        /// </summary>
        internal static string TCE_UnknownColumnEncryptionAlgorithmId {
            get {
                return ResourceManager.GetString("TCE_UnknownColumnEncryptionAlgorithmId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to decrypt a column encryption key. Invalid key store provider name: &apos;{0}&apos;. A key store provider name must denote either a system key store provider or a registered custom key store provider. Valid system key store provider names are: {1}. Valid (currently registered) custom key store provider names are: {2}. Please verify key store provider information in column master key definitions in the database, and verify all custom key store providers used in your application are registered properly..
        /// </summary>
        internal static string TCE_UnrecognizedKeyStoreProviderName {
            get {
                return ResourceManager.GetString("TCE_UnrecognizedKeyStoreProviderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption and decryption of data type &apos;{0}&apos; is not supported..
        /// </summary>
        internal static string TCE_UnsupportedDatatype {
            get {
                return ResourceManager.GetString("TCE_UnsupportedDatatype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normalization version &apos;{0}&apos; received from {2} is not supported. Valid normalization versions are: {1}..
        /// </summary>
        internal static string TCE_UnsupportedNormalizationVersion {
            get {
                return ResourceManager.GetString("TCE_UnsupportedNormalizationVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column master key path &apos;{0}&apos; received from server &apos;{1}&apos; is not a trusted key path..
        /// </summary>
        internal static string TCE_UntrustedKeyPath {
            get {
                return ResourceManager.GetString("TCE_UntrustedKeyPath", resourceCulture);
            }
        }
    }
}
