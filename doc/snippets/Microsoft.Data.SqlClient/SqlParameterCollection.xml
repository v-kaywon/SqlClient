<?xml version="1.0"?>
<docs>
    <members name="SqlParameterCollection">
        <SqlParameterCollection>
            <summary>Represents a collection of parameters associated with a <see cref="T:Microsoft.Data.SqlClient.SqlCommand" /> and their respective mappings to columns in a <see cref="T:System.Data.DataSet" />. This class cannot be inherited.</summary>
            <remarks>
            <format type="text/markdown"><![CDATA[  

## Remarks  
If the command contains an ad hoc SQL statement, as opposed to a stored-procedure name, the number of the parameters in the collection must be equal to the number of parameter placeholders within the command text, or SQL Server raises an error. With a stored procedure, all the parameters declared in the stored procedure without a default value must be provided. Parameters declared with a default value are optional. This lets you specify a value other than the default.  

For more information with additional sample code demonstrating how to use parameters, see [Commands and Parameters](~/docs/framework/data/adonet/commands-and-parameters.md).  



## Examples  
The following example creates multiple instances of <xref:Microsoft.Data.SqlClient.SqlParameter> through the <xref:Microsoft.Data.SqlClient.SqlParameterCollection> collection. The parameters are used to select data within the data source and populate the <xref:System.Data.DataSet>. This code assumes that a <xref:System.Data.DataSet> and a <xref:Microsoft.Data.SqlClient.SqlDataAdapter> have already been created with the appropriate schema, commands, and connection.  

[!code-csharp[SqlParameterCollection_Add6 Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Add6.cs#1)]

]]></format>
            </remarks>
        </SqlParameterCollection>
        <Add>
            <summary>Adds a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
        </Add>
        <AddValue1>
            <param name="value">The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to add to the collection.</param>
            <summary>Adds the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.</returns>
            <remarks>
            <format type="text/markdown"><![CDATA[  
  
## Examples  
[!code-csharp[SqlParameterCollection_Add Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Add.cs#1)]

]]></format>
            </remarks>
            <exception cref="T:System.ArgumentException">The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> specified in the <paramref name="value" /> parameter is already added to this or another <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</exception>
            <exception cref="T:System.InvalidCastException">The parameter passed was not a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
        </AddValue1>
        <AddValue2>
            <param name="value">An <see cref="T:System.Object" />.</param>
            <summary>Adds the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>The index of the new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.</returns>
            <remarks>To be added.</remarks>
        </AddValue2>
        <AddParameterNameSqlDbType>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
            <summary>Adds a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> given the parameter name and the data type.</summary>
            <returns>A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.</returns>
            <remarks>
            <format type="text/markdown"><![CDATA[  

## Examples  
[!code-csharp[SqlParameterCollection_Add3 Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Add3.cs#1)]

]]></format>
            </remarks>
        </AddParameterNameSqlDbType>
        <AddParameterNameValue>
            <param name="parameterName">The name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to add to the collection.</param>
            <param name="value">A <see cref="T:System.Object" />.</param>
            <summary>Adds the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.  

Use caution when you are using this overload of the <see langword="SqlParameterCollection.Add" /> method to specify integer parameter values. Because this overload takes a <paramref name="value" /> of type <see cref="T:System.Object" />, you must convert the integral value to an <see cref="T:System.Object" /> type when the value is zero, as the following C# example demonstrates.  

```  
parameters.Add("@pname", Convert.ToInt32(0));  
```  

If you do not perform this conversion, the compiler assumes that you are trying to call the <see langword="SqlParameterCollection.Add" /> (<see langword="string" />, <see langword="SqlDbType" />) overload.</returns>
    <remarks>
        <format type="text/markdown"><![CDATA[  

## Examples  
[!code-csharp[SqlParameterCollection_Add1 Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Add1.cs#1)]

]]></format>
            </remarks>
            <exception cref="T:System.ArgumentException">The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> specified in the <paramref name="value" /> parameter is already added to this or another <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null.</exception>
        </AddParameterNameValue>
        <AddParameterNameSqlDbTypeSize>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sqlDbType">The <see cref="T:System.Data.SqlDbType" /> of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to add to the collection.</param>
            <param name="size">The size as an <see cref="T:System.Int32" />.</param>
            <summary>Adds a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />, given the specified parameter name, <see cref="T:System.Data.SqlDbType" /> and size.</summary>
            <returns>A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.</returns>
            <remarks>
            <format type="text/markdown"><![CDATA[  
  
## Remarks  
This overload is useful when you are adding a parameter of a variable-length data type such as `varchar` or `binary`.  



## Examples  
[!code-csharp[SqlParameterCollection_Add1 Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Add1.cs#1)]

]]></format>
            </remarks>
        </AddParameterNameSqlDbTypeSize>
        <AddParameterNameSqlDbTypeSizeSourceColumn>
            <param name="parameterName">The name of the parameter.</param>
            <param name="sqlDbType">One of the <see cref="T:System.Data.SqlDbType" /> values.</param>
            <param name="size">The column length.</param>
            <param name="sourceColumn">The name of the source column (<see cref="P:Microsoft.Data.SqlClient.SqlParameter.SourceColumn" />) if this <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> is used in a call to <see cref="o:System.Data.Common.DbDataAdapter.Update" />.</param>
            <summary>Adds a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> with the parameter name, the data type, and the column length.</summary>
            <returns>A new <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.</returns>
            <remarks>
            <format type="text/markdown"><![CDATA[  

## Examples  
[!code-csharp[SqlParameterCollection_Add5 Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Add5.cs#1)]

]]></format>
            </remarks>
        </AddParameterNameSqlDbTypeSizeSourceColumn>
        <AddRange>
            <summary>Adds elements to the end of the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
        </AddRange>
        <AddRangeValues1>
            <param name="values">The <see cref="T:System.Array" /> values to add.</param>
            <summary>Adds an array of values to the end of the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <remarks>To be added.</remarks>
        </AddRangeValues1>
        <AddRangeValues2>
            <param name="values">The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> values to add.</param>
            <summary>Adds an array of <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> values to the end of the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <remarks>To be added.</remarks>
        </AddRangeValues2>
        <AddWithValue>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">The value to be added. Use <see cref="F:System.DBNull.Value" /> instead of null, to indicate a null value.</param>
            <summary>Adds a value to the end of the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>A <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object.</returns>
            <remarks>
            <format type="text/markdown"><![CDATA[  

## Remarks  
<xref:Microsoft.Data.SqlClient.SqlParameterCollection.AddWithValue%2A> replaces the `SqlParameterCollection.Add` method that takes a <xref:System.String> and an <xref:System.Object>. The overload of `Add` that takes a string and an object was deprecated because of possible ambiguity with the `SqlParameterCollection.Add` overload that takes a <xref:System.String> and a <xref:System.Data.SqlDbType> enumeration value where passing an integer with the string could be interpreted as being either the parameter value or the corresponding <xref:System.Data.SqlDbType> value. Use <xref:Microsoft.Data.SqlClient.SqlParameterCollection.AddWithValue%2A> whenever you want to add a parameter by specifying its name and value.  

For <xref:System.Data.SqlDbType>`Xml` enumeration values, you can use a string, an XML value, an <xref:System.Xml.XmlReader> derived type instance, or a <xref:System.Data.SqlTypes.SqlXml> object.  



## Examples  
The following example demonstrates how to use the `AddWithValue` method.  

[!code-csharp[SqlParameterCollection_AddWithValue#1](~/sqlclient/doc/samples/SqlParameterCollection_AddWithValue.cs#1)]

]]></format>
            </remarks>
        </AddWithValue>
        <Clear>
            <summary>Removes all the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> objects from the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <remarks>To be added.</remarks>
        </Clear>
        <Contains>
            <summary>Determines whether the specified object is in this <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
        </Contains>
        <ContainsValue1>
            <param name="value">The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> value.</param>
            <summary>Determines whether the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> is in this <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>
            <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> contains the value; otherwise, <see langword="false" />.</returns>
            <remarks>To be added.</remarks>
        </ContainsValue1>
        <ContainsValue2>
            <param name="value">The <see cref="T:System.Object" /> value.</param>
            <summary>Determines whether the specified <see cref="T:System.Object" /> is in this <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>
            <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> contains the value; otherwise, <see langword="false" />.</returns>
            <remarks>To be added.</remarks>
        </ContainsValue2>
        <ContainsValue3>
            <param name="value">The <see cref="T:System.String" /> value.</param>
            <summary>Determines whether the specified parameter name is in this <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>
            <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> contains the value; otherwise, <see langword="false" />.</returns>
            <remarks>To be added.</remarks>
        </ContainsValue3>
        <CopyTo>
            <summary>Copies all the elements of the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> to the specified object.</summary>
        </CopyTo>
        <CopyToArrayIndex1>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</param>
            <param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Array" /> at which copying starts.</param>
            <summary>Copies all the elements of the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.</summary>
            <remarks>To be added.</remarks>
        </CopyToArrayIndex1>
        <CopyToArrayIndex2>
            <param name="array">The <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> that is the destination of the elements copied from the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</param>
            <param name="index">A 32-bit integer that represents the index in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at which copying starts.</param>
            <summary>Copies all the elements of the current <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> to the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> starting at the specified destination index.</summary>
            <remarks>To be added.</remarks>
        </CopyToArrayIndex2>
        <Count>
            <summary>Returns an Integer that contains the number of elements in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />. Read-only.</summary>
            <value>The number of elements in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> as an Integer.</value>
            <remarks>To be added.</remarks>
        </Count>
        <GetEnumerator>
            <summary>Returns an enumerator that iterates through the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</returns>
            <remarks>To be added.</remarks>
        </GetEnumerator>
        <GetParameterIndex>
            <param name="index">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </GetParameterIndex>
        <GetParameterParameterName>
            <param name="parameterName">To be added.</param>
            <summary>To be added.</summary>
            <returns>To be added.</returns>
            <remarks>To be added.</remarks>
        </GetParameterParameterName>
        <IndexOf>
            <summary>Gets the location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> within the collection.</summary>
        </IndexOf>
        <IndexOfValue1>
            <param name="value">The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to find.</param>
            <summary>Gets the location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> within the collection.</summary>
            <returns>The zero-based location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> that is a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> within the collection. Returns -1 when the object does not exist in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</returns>
            <remarks>To be added.</remarks>
        </IndexOfValue1>
        <IndexOfValue2>
            <param name="value">The <see cref="T:System.Object" /> to find.</param>
            <summary>Gets the location of the specified <see cref="T:System.Object" /> within the collection.</summary>
            <returns>The zero-based location of the specified <see cref="T:System.Object" /> that is a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> within the collection. Returns -1 when the object does not exist in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</returns>
            <remarks>To be added.</remarks>
        </IndexOfValue2>
        <IndexOfParameterName>
            <param name="parameterName">The case-sensitive name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to find.</param>
            <summary>Gets the location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified name.</summary>
            <returns>The zero-based location of the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified case-sensitive name. Returns -1 when the object does not exist in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</returns>
            <remarks>To be added.</remarks>
        </IndexOfParameterName>
        <Insert>
            <summary>Inserts a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object into the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
        </Insert>
        <InsertIndexValue1>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">A <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to be inserted in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</param>
            <summary>Inserts a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object into the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified index.</summary>
            <remarks>To be added.</remarks>
        </InsertIndexValue1>
        <InsertIndexValue2>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">An <see cref="T:System.Object" /> to be inserted in the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</param>
            <summary>Inserts an <see cref="T:System.Object" /> into the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified index.</summary>
            <remarks>To be added.</remarks>
        </InsertIndexValue2>
        <IsFixedSize>
            <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> has a fixed size.</summary>
            <value>
            <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> has a fixed size; otherwise, <see langword="false" />.</value>
            <remarks>To be added.</remarks>
        </IsFixedSize>
        <IsReadOnly>
            <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is read-only.</summary>
            <value>
            <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is read-only; otherwise, <see langword="false" />.</value>
            <remarks>To be added.</remarks>
        </IsReadOnly>
        <IsSynchronized>
            <summary>Gets a value that indicates whether the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is synchronized.</summary>
            <value>
            <see langword="true" /> if the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> is synchronized; otherwise, <see langword="false" />.</value>
            <remarks>To be added.</remarks>
        </IsSynchronized>
        <Item>
            <summary>Gets the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with a specified attribute.</summary>
        </Item>
        <ItemIndex>
            <param name="index">The zero-based index of the parameter to retrieve.</param>
            <summary>Gets the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> at the specified index.</summary>
            <value>The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> at the specified index.</value>
            <remarks>
            <format type="text/markdown"><![CDATA[  
  
## Examples  
The following example demonstrates creating <xref:Microsoft.Data.SqlClient.SqlParameter> objects to supply an input parameter to a stored procedure that returns results in an output parameter. The code iterates through the items in the <xref:Microsoft.Data.SqlClient.SqlParameterCollection> and displays some parameter properties in the console window. This example assumes a valid connection string to the **AdventureWorks** sample database on an instance of SQL Server.  

[!code-csharp[SqlParameterCollection_Count Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Count.cs#1)]  

]]></format>
            </remarks>
            <exception cref="T:System.IndexOutOfRangeException">The specified index does not exist.</exception>
        </ItemIndex>
        <ItemParameterName>
            <param name="parameterName">The name of the parameter to retrieve.</param>
            <summary>Gets the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified name.</summary>
            <value>The <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> with the specified name.</value>
            <remarks>
            <format type="text/markdown"><![CDATA[  

## Remarks  
The `parameterName` is used to look up the index value in the underlying <xref:Microsoft.Data.SqlClient.SqlParameterCollection>. If the `parameterName` is not valid, an <xref:System.IndexOutOfRangeException> will be thrown.  

]]></format>
            </remarks>
            <exception cref="T:System.IndexOutOfRangeException">The specified <paramref name="parameterName" /> is not valid.</exception>
        </ItemParameterName>
        <Remove>
            <summary>Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the collection.</summary>
        </Remove>
        <RemoveValue1>
            <param name="value">A <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to remove from the collection.</param>
            <summary>Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the collection.</summary>
            <remarks>
            <format type="text/markdown"><![CDATA[  

## Examples  
The following example searches for a <xref:Microsoft.Data.SqlClient.SqlParameter> object in a <xref:Microsoft.Data.SqlClient.SqlParameterCollection> collection. If the parameter exists, the example removes it. This example assumes that a <xref:Microsoft.Data.SqlClient.SqlParameterCollection> collection has already been created by a <xref:Microsoft.Data.SqlClient.SqlCommand>.  

[!code-csharp[SqlParameterCollection_Remove Example#1](~/sqlclient/doc/samples/SqlParameterCollection_Remove.cs#1)]

]]></format>
        </remarks>
            <exception cref="T:System.InvalidCastException">The parameter is not a <see cref="T:Microsoft.Data.SqlClient.SqlParameter" />.</exception>
            <exception cref="T:System.SystemException">The parameter does not exist in the collection.</exception>
        </RemoveValue1>
        <RemoveValue2>
            <param name="value">The object to remove from the collection.</param>
            <summary>Removes the specified <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the collection.</summary>
            <remarks>To be added.</remarks>
        </RemoveValue2>
        <RemoveAt>
            <summary>Removes the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object from the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified index.</summary>
        </RemoveAt>
        <RemoveAtIndex>
            <param name="index">The zero-based index of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> object to remove.</param>
            <summary>Removes the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified index.</summary>
            <remarks>To be added.</remarks>
        </RemoveAtIndex>
        <RemoveAtParameterName>
            <param name="parameterName">The name of the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> to remove.</param>
            <summary>Removes the <see cref="T:Microsoft.Data.SqlClient.SqlParameter" /> from the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" /> at the specified parameter name.</summary>
            <remarks>To be added.</remarks>
        </RemoveAtParameterName>
        <SetParameterIndexValue>
            <param name="index">To be added.</param>
            <param name="value">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </SetParameterIndexValue>
        <SetParameterParameterNameValue>
            <param name="parameterName">To be added.</param>
            <param name="value">To be added.</param>
            <summary>To be added.</summary>
            <remarks>To be added.</remarks>
        </SetParameterParameterNameValue>
        <SyncRoot>
            <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</summary>
            <value>An object that can be used to synchronize access to the <see cref="T:Microsoft.Data.SqlClient.SqlParameterCollection" />.</value>
            <remarks>To be added.</remarks>
        </SyncRoot>
    </members>
</docs>
